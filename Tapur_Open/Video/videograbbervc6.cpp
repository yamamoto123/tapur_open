// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


#include "stdafx.h"
#include "videograbbervc6.h"

/////////////////////////////////////////////////////////////////////////////
// CVideoGrabberVC6

IMPLEMENT_DYNCREATE(CVideoGrabberVC6, CWnd)

/////////////////////////////////////////////////////////////////////////////
// CVideoGrabberVC6 properties

/////////////////////////////////////////////////////////////////////////////
// CVideoGrabberVC6 operations

long CVideoGrabberVC6::GetBusyCursor()
{
	long result;
	InvokeHelper(0xc9, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetBusyCursor(long Value)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xca, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 Value);
}

long CVideoGrabberVC6::GetVideoCursor()
{
	long result;
	InvokeHelper(0xcb, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetVideoCursor(long Value)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xcc, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 Value);
}

long CVideoGrabberVC6::GetNormalCursor()
{
	long result;
	InvokeHelper(0xcd, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetNormalCursor(long Value)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xce, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 Value);
}

long CVideoGrabberVC6::GetAnalogVideoStandard()
{
	long result;
	InvokeHelper(0xcf, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CVideoGrabberVC6::GetAnalogVideoStandards()
{
	CString result;
	InvokeHelper(0xd0, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CVideoGrabberVC6::GetAnalogVideoStandardsCount()
{
	long result;
	InvokeHelper(0xd1, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CVideoGrabberVC6::GetBufferCount()
{
	long result;
	InvokeHelper(0xd2, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CVideoGrabberVC6::GetASFProfiles()
{
	CString result;
	InvokeHelper(0xd3, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CVideoGrabberVC6::GetASFProfilesCount()
{
	long result;
	InvokeHelper(0xd4, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CVideoGrabberVC6::GetAudioBalance()
{
	long result;
	InvokeHelper(0xd5, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CVideoGrabberVC6::GetAudioCompressor()
{
	long result;
	InvokeHelper(0xd6, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CVideoGrabberVC6::GetAudioCompressorName()
{
	CString result;
	InvokeHelper(0xd7, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CVideoGrabberVC6::GetAudioInputBalance()
{
	long result;
	InvokeHelper(0xd8, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CVideoGrabberVC6::GetAudioInputLevel()
{
	long result;
	InvokeHelper(0xd9, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

BOOL CVideoGrabberVC6::GetAudioInputMono()
{
	BOOL result;
	InvokeHelper(0xda, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

long CVideoGrabberVC6::GetAudioInput()
{
	long result;
	InvokeHelper(0xdb, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CVideoGrabberVC6::GetAudioInputs()
{
	CString result;
	InvokeHelper(0xdc, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CVideoGrabberVC6::GetAudioInputsCount()
{
	long result;
	InvokeHelper(0xdd, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CVideoGrabberVC6::GetAudioDeviceName()
{
	CString result;
	InvokeHelper(0xde, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CVideoGrabberVC6::GetAudioFormats()
{
	CString result;
	InvokeHelper(0xdf, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CVideoGrabberVC6::GetAudioRendererName()
{
	CString result;
	InvokeHelper(0xe0, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CVideoGrabberVC6::GetAudioVolume()
{
	long result;
	InvokeHelper(0xe1, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

BOOL CVideoGrabberVC6::GetBusy()
{
	BOOL result;
	InvokeHelper(0xe2, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

long CVideoGrabberVC6::GetCropping_YMax()
{
	long result;
	InvokeHelper(0xe3, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CVideoGrabberVC6::GetCropping_XMax()
{
	long result;
	InvokeHelper(0xe4, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

double CVideoGrabberVC6::GetCurrentFrameRate()
{
	double result;
	InvokeHelper(0xe5, DISPATCH_METHOD, VT_R8, (void*)&result, NULL);
	return result;
}

long CVideoGrabberVC6::GetCurrentState()
{
	long result;
	InvokeHelper(0xe6, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

double CVideoGrabberVC6::GetDeliveredFrames()
{
	double result;
	InvokeHelper(0xe7, DISPATCH_METHOD, VT_R8, (void*)&result, NULL);
	return result;
}

long CVideoGrabberVC6::GetDisplay_VideoHeight()
{
	long result;
	InvokeHelper(0xe8, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CVideoGrabberVC6::GetDisplay_VideoWidth()
{
	long result;
	InvokeHelper(0xe9, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CVideoGrabberVC6::GetDroppedFrameCount()
{
	long result;
	InvokeHelper(0xea, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CVideoGrabberVC6::GetDisplay_VideoWindowHandle()
{
	long result;
	InvokeHelper(0xeb, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CVideoGrabberVC6::GetDualDisplay_VideoWindowHandle()
{
	long result;
	InvokeHelper(0xec, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CVideoGrabberVC6::GetAudioCompressors()
{
	CString result;
	InvokeHelper(0xed, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CVideoGrabberVC6::GetAudioCompressorsCount()
{
	long result;
	InvokeHelper(0xee, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CVideoGrabberVC6::GetAudioDevices()
{
	CString result;
	InvokeHelper(0xef, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CVideoGrabberVC6::GetAudioDevicesCount()
{
	long result;
	InvokeHelper(0xf0, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CVideoGrabberVC6::GetAudioRenderers()
{
	CString result;
	InvokeHelper(0xf1, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CVideoGrabberVC6::GetAudioRenderersCount()
{
	long result;
	InvokeHelper(0xf2, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CVideoGrabberVC6::GetVideoCompressors()
{
	CString result;
	InvokeHelper(0xf3, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CVideoGrabberVC6::GetVideoCompressorsCount()
{
	long result;
	InvokeHelper(0xf4, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CVideoGrabberVC6::GetVideoDevices()
{
	CString result;
	InvokeHelper(0xf5, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CVideoGrabberVC6::GetVideoDevicesId()
{
	CString result;
	InvokeHelper(0xf6, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CVideoGrabberVC6::GetVideoDevicesCount()
{
	long result;
	InvokeHelper(0xf7, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CVideoGrabberVC6::GetDualDisplay_VideoHeight()
{
	long result;
	InvokeHelper(0xf8, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CVideoGrabberVC6::GetDualDisplay_VideoWidth()
{
	long result;
	InvokeHelper(0xf9, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CVideoGrabberVC6::GetFrameGrabberCurrentRGBFormat()
{
	long result;
	InvokeHelper(0xfa, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CVideoGrabberVC6::GetGlobal_AudioCompressors()
{
	CString result;
	InvokeHelper(0xfb, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CVideoGrabberVC6::GetGlobal_AudioCompressorsCount()
{
	long result;
	InvokeHelper(0xfc, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CVideoGrabberVC6::GetGlobal_AudioDevices()
{
	CString result;
	InvokeHelper(0xfd, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CVideoGrabberVC6::GetGlobal_AudioDevicesCount()
{
	long result;
	InvokeHelper(0xfe, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CVideoGrabberVC6::GetGlobal_AudioRenderers()
{
	CString result;
	InvokeHelper(0xff, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CVideoGrabberVC6::GetGlobal_AudioRenderersCount()
{
	long result;
	InvokeHelper(0x100, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CVideoGrabberVC6::GetGlobal_VideoCompressors()
{
	CString result;
	InvokeHelper(0x101, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CVideoGrabberVC6::GetGlobal_VideoCompressorsCount()
{
	long result;
	InvokeHelper(0x102, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CVideoGrabberVC6::GetGlobal_VideoDevices()
{
	CString result;
	InvokeHelper(0x103, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CVideoGrabberVC6::GetGlobal_VideoDevicesId()
{
	CString result;
	InvokeHelper(0x104, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CVideoGrabberVC6::GetGlobal_VideoDevicesCount()
{
	long result;
	InvokeHelper(0x105, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

BOOL CVideoGrabberVC6::GetHoldRecording()
{
	BOOL result;
	InvokeHelper(0x106, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

double CVideoGrabberVC6::GetImageRatio()
{
	double result;
	InvokeHelper(0x107, DISPATCH_METHOD, VT_R8, (void*)&result, NULL);
	return result;
}

BOOL CVideoGrabberVC6::GetInFrameProgressEvent()
{
	BOOL result;
	InvokeHelper(0x108, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

BOOL CVideoGrabberVC6::GetIsAnalogVideoDecoderAvailable()
{
	BOOL result;
	InvokeHelper(0x109, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

BOOL CVideoGrabberVC6::GetIsAudioCrossbarAvailable()
{
	BOOL result;
	InvokeHelper(0x10a, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

BOOL CVideoGrabberVC6::GetIsAudioDeviceASoundCard()
{
	BOOL result;
	InvokeHelper(0x10b, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

long CVideoGrabberVC6::GetIsAudioInputBalanceAvailable()
{
	long result;
	InvokeHelper(0x10c, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

BOOL CVideoGrabberVC6::GetIsCameraControlAvailable()
{
	BOOL result;
	InvokeHelper(0x10d, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

BOOL CVideoGrabberVC6::GetIsDigitalVideoIn()
{
	BOOL result;
	InvokeHelper(0x10e, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

BOOL CVideoGrabberVC6::GetIsDVCommandAvailable()
{
	BOOL result;
	InvokeHelper(0x10f, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

BOOL CVideoGrabberVC6::GetIsHorizontalSyncLocked()
{
	BOOL result;
	InvokeHelper(0x110, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

BOOL CVideoGrabberVC6::GetIsMpegStream()
{
	BOOL result;
	InvokeHelper(0x111, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

long CVideoGrabberVC6::GetIsPlayerAudioStreamAvailable()
{
	long result;
	InvokeHelper(0x112, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

BOOL CVideoGrabberVC6::GetIsPlayerPaused()
{
	BOOL result;
	InvokeHelper(0x113, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

BOOL CVideoGrabberVC6::GetIsPlayerPlaying()
{
	BOOL result;
	InvokeHelper(0x114, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

BOOL CVideoGrabberVC6::GetIsRecordingPaused()
{
	BOOL result;
	InvokeHelper(0x115, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

BOOL CVideoGrabberVC6::GetTimeCodeReaderAvailable()
{
	BOOL result;
	InvokeHelper(0x116, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

BOOL CVideoGrabberVC6::GetIsTVAudioAvailable()
{
	BOOL result;
	InvokeHelper(0x117, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

BOOL CVideoGrabberVC6::GetIsTVAutoTuneRunning()
{
	BOOL result;
	InvokeHelper(0x118, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

BOOL CVideoGrabberVC6::GetIsTVTunerAvailable()
{
	BOOL result;
	InvokeHelper(0x119, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

BOOL CVideoGrabberVC6::GetIsVideoControlAvailable()
{
	BOOL result;
	InvokeHelper(0x11a, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

BOOL CVideoGrabberVC6::GetIsVideoCrossbarAvailable()
{
	BOOL result;
	InvokeHelper(0x11b, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

BOOL CVideoGrabberVC6::GetIsVideoQualityAvailable()
{
	BOOL result;
	InvokeHelper(0x11c, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

BOOL CVideoGrabberVC6::GetIsVideoPortAvailable()
{
	BOOL result;
	InvokeHelper(0x11d, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

BOOL CVideoGrabberVC6::GetIsVideoInterlaced()
{
	BOOL result;
	InvokeHelper(0x11e, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

BOOL CVideoGrabberVC6::GetIsWDMVideoDriver()
{
	BOOL result;
	InvokeHelper(0x11f, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

CString CVideoGrabberVC6::GetLast_BurstFrameCapture_FileName()
{
	CString result;
	InvokeHelper(0x120, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CVideoGrabberVC6::GetLast_CaptureFrameTo_FileName()
{
	CString result;
	InvokeHelper(0x121, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CVideoGrabberVC6::GetLast_Recording_FileName()
{
	CString result;
	InvokeHelper(0x122, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CVideoGrabberVC6::GetLast_Clip_Played()
{
	CString result;
	InvokeHelper(0x123, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

double CVideoGrabberVC6::GetMotionDetector_GlobalMotionRatio()
{
	double result;
	InvokeHelper(0x124, DISPATCH_METHOD, VT_R8, (void*)&result, NULL);
	return result;
}

long CVideoGrabberVC6::GetMotionDetector_GridXCount()
{
	long result;
	InvokeHelper(0x125, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CVideoGrabberVC6::GetMotionDetector_GridYCount()
{
	long result;
	InvokeHelper(0x126, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

BOOL CVideoGrabberVC6::GetMotionDetector_IsGridValid()
{
	BOOL result;
	InvokeHelper(0x127, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

long CVideoGrabberVC6::GetMpegStreamType()
{
	long result;
	InvokeHelper(0x128, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CVideoGrabberVC6::GetParentWindow()
{
	long result;
	InvokeHelper(0x129, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

double CVideoGrabberVC6::GetPlayerDuration()
{
	double result;
	InvokeHelper(0x12a, DISPATCH_METHOD, VT_R8, (void*)&result, NULL);
	return result;
}

CString CVideoGrabberVC6::GetPlayerAudioCodec()
{
	CString result;
	InvokeHelper(0x12b, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

double CVideoGrabberVC6::GetPlayerFrameCount()
{
	double result;
	InvokeHelper(0x12c, DISPATCH_METHOD, VT_R8, (void*)&result, NULL);
	return result;
}

double CVideoGrabberVC6::GetPlayerFramePosition()
{
	double result;
	InvokeHelper(0x12d, DISPATCH_METHOD, VT_R8, (void*)&result, NULL);
	return result;
}

double CVideoGrabberVC6::GetPlayerTimePosition()
{
	double result;
	InvokeHelper(0x12e, DISPATCH_METHOD, VT_R8, (void*)&result, NULL);
	return result;
}

double CVideoGrabberVC6::GetPlayerFrameRate()
{
	double result;
	InvokeHelper(0x12f, DISPATCH_METHOD, VT_R8, (void*)&result, NULL);
	return result;
}

CString CVideoGrabberVC6::GetPlayerVideoCodec()
{
	CString result;
	InvokeHelper(0x130, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CVideoGrabberVC6::GetPropertyPageSaverGroup()
{
	CString result;
	InvokeHelper(0x131, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CVideoGrabberVC6::GetRecordingBacktimedFramesCount()
{
	long result;
	InvokeHelper(0x132, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

BOOL CVideoGrabberVC6::GetRecordingCanPause()
{
	BOOL result;
	InvokeHelper(0x133, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

double CVideoGrabberVC6::GetRecordingDuration()
{
	double result;
	InvokeHelper(0x134, DISPATCH_METHOD, VT_R8, (void*)&result, NULL);
	return result;
}

CString CVideoGrabberVC6::GetRecordingFourCC()
{
	CString result;
	InvokeHelper(0x135, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CVideoGrabberVC6::GetRecordingHeight()
{
	long result;
	InvokeHelper(0x136, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CVideoGrabberVC6::GetRecordingWidth()
{
	long result;
	InvokeHelper(0x137, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

double CVideoGrabberVC6::GetReencodingStartTime()
{
	double result;
	InvokeHelper(0x138, DISPATCH_METHOD, VT_R8, (void*)&result, NULL);
	return result;
}

double CVideoGrabberVC6::GetReencodingStopTime()
{
	double result;
	InvokeHelper(0x139, DISPATCH_METHOD, VT_R8, (void*)&result, NULL);
	return result;
}

long CVideoGrabberVC6::GetSendToDV_DeviceIndex()
{
	long result;
	InvokeHelper(0x13a, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CVideoGrabberVC6::GetSpeakerBalance()
{
	long result;
	InvokeHelper(0x13b, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CVideoGrabberVC6::GetSpeakerVolume()
{
	long result;
	InvokeHelper(0x13c, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CVideoGrabberVC6::GetStreamingURL()
{
	CString result;
	InvokeHelper(0x13d, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CVideoGrabberVC6::GetSystemTempPath()
{
	CString result;
	InvokeHelper(0x13e, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CVideoGrabberVC6::GetTVChannel()
{
	long result;
	InvokeHelper(0x13f, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CVideoGrabberVC6::GetTVCountryCode()
{
	long result;
	InvokeHelper(0x140, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CVideoGrabberVC6::GetTVTunerInputType()
{
	long result;
	InvokeHelper(0x141, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CVideoGrabberVC6::GetTunerMode()
{
	long result;
	InvokeHelper(0x142, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CVideoGrabberVC6::GetUniqueID()
{
	long result;
	InvokeHelper(0x143, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

BOOL CVideoGrabberVC6::GetVCRHorizontalLocking()
{
	BOOL result;
	InvokeHelper(0x144, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

long CVideoGrabberVC6::GetVideoCompressor()
{
	long result;
	InvokeHelper(0x145, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CVideoGrabberVC6::GetVideoCompressorName()
{
	CString result;
	InvokeHelper(0x146, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CVideoGrabberVC6::GetVideoInput()
{
	long result;
	InvokeHelper(0x147, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CVideoGrabberVC6::GetVideoInputs()
{
	CString result;
	InvokeHelper(0x148, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CVideoGrabberVC6::GetVideoInputsCount()
{
	long result;
	InvokeHelper(0x149, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CVideoGrabberVC6::GetVideoDeviceName()
{
	CString result;
	InvokeHelper(0x14a, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CVideoGrabberVC6::GetVideoSize()
{
	long result;
	InvokeHelper(0x14b, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CVideoGrabberVC6::GetVideoSizes()
{
	CString result;
	InvokeHelper(0x14c, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CVideoGrabberVC6::GetVideoSizesCount()
{
	long result;
	InvokeHelper(0x14d, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CVideoGrabberVC6::GetVideoHeight()
{
	long result;
	InvokeHelper(0x14e, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CVideoGrabberVC6::GetVideoWidth()
{
	long result;
	InvokeHelper(0x14f, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CVideoGrabberVC6::GetVideoSources()
{
	CString result;
	InvokeHelper(0x150, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CVideoGrabberVC6::GetVideoSourcesCount()
{
	long result;
	InvokeHelper(0x151, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CVideoGrabberVC6::GetVideoSubtype()
{
	long result;
	InvokeHelper(0x152, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CVideoGrabberVC6::GetVideoSubtypes()
{
	CString result;
	InvokeHelper(0x153, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CVideoGrabberVC6::GetVideoSubtypesCount()
{
	long result;
	InvokeHelper(0x154, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetAnalogVideoStandard(long Value)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x155, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 Value);
}

void CVideoGrabberVC6::SetAudioBalance(long Value)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x156, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 Value);
}

void CVideoGrabberVC6::SetAudioCompressor(long Value)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x157, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 Value);
}

void CVideoGrabberVC6::SetAudioInput(long Value)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x158, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 Value);
}

void CVideoGrabberVC6::SetAudioInputBalance(long Value)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x159, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 Value);
}

void CVideoGrabberVC6::SetAudioInputLevel(long Value)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x15a, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 Value);
}

void CVideoGrabberVC6::SetAudioInputMono(BOOL Value)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x15b, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 Value);
}

void CVideoGrabberVC6::SetAudioVolume(long Value)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x15c, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 Value);
}

void CVideoGrabberVC6::SetBufferCount(long Value)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x15d, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 Value);
}

void CVideoGrabberVC6::SetHoldRecording(BOOL Value)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x15e, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 Value);
}

void CVideoGrabberVC6::SetMpegStreamType(long Value)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x15f, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 Value);
}

void CVideoGrabberVC6::SetParentWindow(long Value)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x160, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 Value);
}

void CVideoGrabberVC6::SetPlayerDuration(double Value)
{
	static BYTE parms[] =
		VTS_R8;
	InvokeHelper(0x161, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 Value);
}

void CVideoGrabberVC6::SetPlayerFramePosition(double Value)
{
	static BYTE parms[] =
		VTS_R8;
	InvokeHelper(0x162, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 Value);
}

void CVideoGrabberVC6::SetPlayerTimePosition(double Value)
{
	static BYTE parms[] =
		VTS_R8;
	InvokeHelper(0x163, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 Value);
}

void CVideoGrabberVC6::SetPropertyPageSaverGroup(LPCTSTR Value)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x164, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 Value);
}

void CVideoGrabberVC6::SetRecordingBacktimedFramesCount(long Value)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x165, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 Value);
}

void CVideoGrabberVC6::SetRecordingCanPause(BOOL Value)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x166, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 Value);
}

void CVideoGrabberVC6::SetReencodingStartTime(double Value)
{
	static BYTE parms[] =
		VTS_R8;
	InvokeHelper(0x167, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 Value);
}

void CVideoGrabberVC6::SetReencodingStopTime(double Value)
{
	static BYTE parms[] =
		VTS_R8;
	InvokeHelper(0x168, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 Value);
}

void CVideoGrabberVC6::SetSendToDV_DeviceIndex(long Value)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x169, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 Value);
}

void CVideoGrabberVC6::SetSpeakerBalance(long Value)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x16a, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 Value);
}

void CVideoGrabberVC6::SetSpeakerVolume(long Value)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x16b, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 Value);
}

void CVideoGrabberVC6::SetTVChannel(long Value)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x16c, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 Value);
}

void CVideoGrabberVC6::SetTVCountryCode(long Value)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x16d, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 Value);
}

void CVideoGrabberVC6::SetTVTunerInputType(long Value)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x16e, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 Value);
}

void CVideoGrabberVC6::SetTunerMode(long Value)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x16f, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 Value);
}

void CVideoGrabberVC6::SetVCRHorizontalLocking(BOOL Value)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x170, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 Value);
}

void CVideoGrabberVC6::SetVideoCompressor(long Value)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x171, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 Value);
}

void CVideoGrabberVC6::SetVideoInput(long Value)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x172, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 Value);
}

void CVideoGrabberVC6::SetVideoSize(long Value)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x173, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 Value);
}

void CVideoGrabberVC6::SetVideoSubtype(long Value)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x174, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 Value);
}

long CVideoGrabberVC6::GetTextOverlay_Font()
{
	long result;
	InvokeHelper(0x175, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetTextOverlay_Font(long Value)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x176, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 Value);
}

void CVideoGrabberVC6::About()
{
	InvokeHelper(0x177, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

long CVideoGrabberVC6::AnalogVideoStandardIndex(LPCTSTR param1)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x178, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		param1);
	return result;
}

CString CVideoGrabberVC6::ASFStreaming_GetAuthorizationList()
{
	CString result;
	InvokeHelper(0x179, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CVideoGrabberVC6::ASFStreaming_GetConnectedClients()
{
	CString result;
	InvokeHelper(0x17a, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CVideoGrabberVC6::ASFStreaming_GetConnectedClientsCount()
{
	long result;
	InvokeHelper(0x17b, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

BOOL CVideoGrabberVC6::ASFStreaming_ResetAuthorizations()
{
	BOOL result;
	InvokeHelper(0x17c, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

BOOL CVideoGrabberVC6::ASFStreaming_SetAuthorization(BOOL Allowed, LPCTSTR IP, LPCTSTR Mask)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BOOL VTS_BSTR VTS_BSTR;
	InvokeHelper(0x17d, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		Allowed, IP, Mask);
	return result;
}

BOOL CVideoGrabberVC6::AssociateMultiplexedSlave(long InputNumber, long SlaveUniqueID)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0x17e, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		InputNumber, SlaveUniqueID);
	return result;
}

long CVideoGrabberVC6::AudioCompressorIndex(LPCTSTR param1)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x17f, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		param1);
	return result;
}

long CVideoGrabberVC6::AudioDeviceIndex(LPCTSTR param1)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x180, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		param1);
	return result;
}

long CVideoGrabberVC6::AudioRendererIndex(LPCTSTR param1)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x181, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		param1);
	return result;
}

long CVideoGrabberVC6::AudioInputIndex(LPCTSTR param1)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x182, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		param1);
	return result;
}

CString CVideoGrabberVC6::AVIHeaderInfo(LPCTSTR AVIFile, long HeaderAttribute)
{
	CString result;
	static BYTE parms[] =
		VTS_BSTR VTS_I4;
	InvokeHelper(0x183, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		AVIFile, HeaderAttribute);
	return result;
}

long CVideoGrabberVC6::CameraControlValue(long Setting)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x184, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		Setting);
	return result;
}

BOOL CVideoGrabberVC6::CameraControlAuto(long Setting)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x185, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		Setting);
	return result;
}

long CVideoGrabberVC6::CameraControlDefault(long Setting)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x186, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		Setting);
	return result;
}

long CVideoGrabberVC6::CameraControlMin(long Setting)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x187, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		Setting);
	return result;
}

long CVideoGrabberVC6::CameraControlMax(long Setting)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x188, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		Setting);
	return result;
}

long CVideoGrabberVC6::CameraControlStep(long Setting)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x189, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		Setting);
	return result;
}

BOOL CVideoGrabberVC6::Cancel()
{
	BOOL result;
	InvokeHelper(0x18a, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

BOOL CVideoGrabberVC6::CanProcessMessages()
{
	BOOL result;
	InvokeHelper(0x18b, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

BOOL CVideoGrabberVC6::CaptureFrameTo(long Dest, LPCTSTR FileName)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4 VTS_BSTR;
	InvokeHelper(0x18c, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		Dest, FileName);
	return result;
}

BOOL CVideoGrabberVC6::CaptureFrameSyncTo(long Dest, LPCTSTR FileName)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4 VTS_BSTR;
	InvokeHelper(0x18d, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		Dest, FileName);
	return result;
}

void CVideoGrabberVC6::ClearHeaderAttributes()
{
	InvokeHelper(0x18e, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CVideoGrabberVC6::ClosePlayer()
{
	InvokeHelper(0x18f, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

BOOL CVideoGrabberVC6::CreatePreallocCapFile()
{
	BOOL result;
	InvokeHelper(0x190, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

BOOL CVideoGrabberVC6::CrossbarCanConnectInput(long Crossbar, long InputIndex, long OutputIndex)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0x191, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		Crossbar, InputIndex, OutputIndex);
	return result;
}

BOOL CVideoGrabberVC6::CrossbarConnectInput(long Crossbar, long InputIndex, long OutputIndex)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0x192, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		Crossbar, InputIndex, OutputIndex);
	return result;
}

BOOL CVideoGrabberVC6::CrossbarGetPInBounds(long Crossbar, long* InputCount, long* OutputCount)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4 VTS_PI4 VTS_PI4;
	InvokeHelper(0x193, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		Crossbar, InputCount, OutputCount);
	return result;
}

BOOL CVideoGrabberVC6::CrossbarGetPinInfo(long Crossbar, long PinDirection, long Index, long* IndexRelated, long* PhysicalType, BSTR* PhysicalTypestring)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4 VTS_PI4 VTS_PI4 VTS_PBSTR;
	InvokeHelper(0x194, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		Crossbar, PinDirection, Index, IndexRelated, PhysicalType, PhysicalTypestring);
	return result;
}

BOOL CVideoGrabberVC6::CrossbarGetInputConnected(long Crossbar, long OutputIndex, long* InputIndex)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_PI4;
	InvokeHelper(0x195, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		Crossbar, OutputIndex, InputIndex);
	return result;
}

void CVideoGrabberVC6::Display_SetLocation(long WindowLeft, long WindowTop, long WindowWidth, long WindowHeight)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0x196, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 WindowLeft, WindowTop, WindowWidth, WindowHeight);
}

void CVideoGrabberVC6::DestroyComponent()
{
	InvokeHelper(0x197, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CVideoGrabberVC6::DualDisplay_SetLocation(long WindowLeft, long WindowTop, long WindowWidth, long WindowHeight)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0x198, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 WindowLeft, WindowTop, WindowWidth, WindowHeight);
}

BOOL CVideoGrabberVC6::DrawBitmapOverFrame(long BitmapHandle, long LeftLocation, long TopLocation, long bmWidth, long bmHeight, BOOL Transparent, BOOL UseTransparentColor, unsigned long TransparentColorValue, BOOL AlphaBlend, long AlphaBlendValue)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_BOOL VTS_BOOL VTS_I4 VTS_BOOL VTS_I4;
	InvokeHelper(0x199, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		BitmapHandle, LeftLocation, TopLocation, bmWidth, bmHeight, Transparent, UseTransparentColor, TransparentColorValue, AlphaBlend, AlphaBlendValue);
	return result;
}

BOOL CVideoGrabberVC6::EnumerateWindows()
{
	BOOL result;
	InvokeHelper(0x19a, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::FastForwardPlayer()
{
	InvokeHelper(0x19b, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

long CVideoGrabberVC6::FindIndexInListByName(LPCTSTR List, LPCTSTR SearchedString, BOOL IsSubString, BOOL IgnoreCase)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR VTS_BOOL VTS_BOOL;
	InvokeHelper(0x19c, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		List, SearchedString, IsSubString, IgnoreCase);
	return result;
}

long CVideoGrabberVC6::GetFrameInfo(long FrameId, long FrameInfoId)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0x19d, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		FrameId, FrameInfoId);
	return result;
}

long CVideoGrabberVC6::GetGPIO(long CustomID, long Index)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0x19e, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		CustomID, Index);
	return result;
}

CString CVideoGrabberVC6::GetLogString(long param1)
{
	CString result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x19f, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		param1);
	return result;
}

long CVideoGrabberVC6::GetNearestVideoWidth(long PreferredVideoWidth, long PreferredVideoHeight)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0x1a0, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		PreferredVideoWidth, PreferredVideoHeight);
	return result;
}

long CVideoGrabberVC6::GetNearestVideoHeight(long PreferredVideoWidth, long PreferredVideoHeight)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0x1a1, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		PreferredVideoWidth, PreferredVideoHeight);
	return result;
}

CString CVideoGrabberVC6::GetPlaylist()
{
	CString result;
	InvokeHelper(0x1a2, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CVideoGrabberVC6::GetTVChannelInfo(long param1)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x1a3, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		param1);
	return result;
}

long CVideoGrabberVC6::GetVideoWidthFromIndex(long VideoSizeIndex)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x1a4, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		VideoSizeIndex);
	return result;
}

long CVideoGrabberVC6::GetVideoHeightFromIndex(long VideoSizeIndex)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x1a5, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		VideoSizeIndex);
	return result;
}

void CVideoGrabberVC6::GetNearestVideoSize(long PreferredVideoWidth, long PreferredVideoHeight, long* NearestVideoWidth, long* NearestVideoHeight)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_PI4 VTS_PI4;
	InvokeHelper(0x1a6, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 PreferredVideoWidth, PreferredVideoHeight, NearestVideoWidth, NearestVideoHeight);
}

BOOL CVideoGrabberVC6::GetVMR9ImageAdjustmentBounds(BOOL MainDisplay, long VMR9ControlSetting, long* MinValue, long* MaxValue, long* StepSize, long* DefaultValue, long* CurrentValue)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BOOL VTS_I4 VTS_PI4 VTS_PI4 VTS_PI4 VTS_PI4 VTS_PI4;
	InvokeHelper(0x1a7, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		MainDisplay, VMR9ControlSetting, MinValue, MaxValue, StepSize, DefaultValue, CurrentValue);
	return result;
}

BOOL CVideoGrabberVC6::GetVideoSizeFromIndex(long VideoSizeIndex, long* VideoWidth, long* VideoHeight)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4 VTS_PI4 VTS_PI4;
	InvokeHelper(0x1a8, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		VideoSizeIndex, VideoWidth, VideoHeight);
	return result;
}

BOOL CVideoGrabberVC6::AVIDuration(LPCTSTR AVIFile, double* Duration, double* FrameCount)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR VTS_PR8 VTS_PR8;
	InvokeHelper(0x1a9, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		AVIFile, Duration, FrameCount);
	return result;
}

BOOL CVideoGrabberVC6::AVIInfo(LPCTSTR AVIFile, double* Duration, double* FrameCount, long* VideoWidth, long* VideoHeight, double* VideoFrameRateFps, long* AvgBitRate, long* AudioChannels, long* AudioSamplesPerSec, long* AudioBitsPerSample, BSTR* VideoCodec, 
		BSTR* AudioCodec)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR VTS_PR8 VTS_PR8 VTS_PI4 VTS_PI4 VTS_PR8 VTS_PI4 VTS_PI4 VTS_PI4 VTS_PI4 VTS_PBSTR VTS_PBSTR;
	InvokeHelper(0x1aa, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		AVIFile, Duration, FrameCount, VideoWidth, VideoHeight, VideoFrameRateFps, AvgBitRate, AudioChannels, AudioSamplesPerSec, AudioBitsPerSample, VideoCodec, AudioCodec);
	return result;
}

BOOL CVideoGrabberVC6::GetVideoCompressionSettings(long* DataRate, long* KeyFrameRate, long* PFramesPerKeyFrame, long* WindowSize, double* Quality, BOOL* CanQuality, BOOL* CanCrunch, BOOL* CanKeyFrame, BOOL* CanBFrame, BOOL* CanWindow)
{
	BOOL result;
	static BYTE parms[] =
		VTS_PI4 VTS_PI4 VTS_PI4 VTS_PI4 VTS_PR8 VTS_PBOOL VTS_PBOOL VTS_PBOOL VTS_PBOOL VTS_PBOOL;
	InvokeHelper(0x1ab, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		DataRate, KeyFrameRate, PFramesPerKeyFrame, WindowSize, Quality, CanQuality, CanCrunch, CanKeyFrame, CanBFrame, CanWindow);
	return result;
}

long CVideoGrabberVC6::GetRGBPixelAt(long x, long y)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0x1ac, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		x, y);
	return result;
}

long CVideoGrabberVC6::GetVUMeterSetting(long ChannelIndex, long VUMeterSetting)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0x1ad, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		ChannelIndex, VUMeterSetting);
	return result;
}

long CVideoGrabberVC6::GraphState()
{
	long result;
	InvokeHelper(0x1ae, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

BOOL CVideoGrabberVC6::IsCameraControlSettingAvailable(long Setting)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x1af, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		Setting);
	return result;
}

BOOL CVideoGrabberVC6::IsDialogAvailable(long Dialog)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x1b0, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		Dialog);
	return result;
}

BOOL CVideoGrabberVC6::IsPlaylistActive()
{
	BOOL result;
	InvokeHelper(0x1b1, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

BOOL CVideoGrabberVC6::IsVideoQualitySettingAvailable(long Setting)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x1b2, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		Setting);
	return result;
}

BOOL CVideoGrabberVC6::IsVideoControlModeAvailable(long Mode)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x1b3, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		Mode);
	return result;
}

BOOL CVideoGrabberVC6::IsVMR9ImageAdjustmentAvailable(BOOL MainDisplay)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x1b4, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		MainDisplay);
	return result;
}

BOOL CVideoGrabberVC6::IsVideoSignalDetected(BOOL DetectConnexantBlueScreen, BOOL DetectCustomRGB, long CustomR, long CustomG, long CustomB, BOOL UseAsMaxValues)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BOOL VTS_BOOL VTS_I4 VTS_I4 VTS_I4 VTS_BOOL;
	InvokeHelper(0x1b5, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		DetectConnexantBlueScreen, DetectCustomRGB, CustomR, CustomG, CustomB, UseAsMaxValues);
	return result;
}

BOOL CVideoGrabberVC6::MixAudioSamples(long pSampleBuffer, long SampleBufferSize, long SampleDataLength, long SampleFormatType, long pFormat, double SampleStartTime, double SampleStopTime)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_R8 VTS_R8;
	InvokeHelper(0x1b6, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		pSampleBuffer, SampleBufferSize, SampleDataLength, SampleFormatType, pFormat, SampleStartTime, SampleStopTime);
	return result;
}

double CVideoGrabberVC6::MotionDetector_CellMotionRatio(long x, long y)
{
	double result;
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0x1b7, DISPATCH_METHOD, VT_R8, (void*)&result, parms,
		x, y);
	return result;
}

CString CVideoGrabberVC6::MotionDetector_Get2DTextGrid()
{
	CString result;
	InvokeHelper(0x1b8, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CVideoGrabberVC6::MotionDetector_Get2DTextMotion()
{
	CString result;
	InvokeHelper(0x1b9, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

BOOL CVideoGrabberVC6::MotionDetector_GetCellLocation(long x, long y, long* XLocation, long* YLocation)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_PI4 VTS_PI4;
	InvokeHelper(0x1ba, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		x, y, XLocation, YLocation);
	return result;
}

BOOL CVideoGrabberVC6::MotionDetector_GetCellSensitivity(long x, long y, long* param3)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_PI4;
	InvokeHelper(0x1bb, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		x, y, param3);
	return result;
}

BOOL CVideoGrabberVC6::MotionDetector_GetCellSize(long* XSize, long* YSize)
{
	BOOL result;
	static BYTE parms[] =
		VTS_PI4 VTS_PI4;
	InvokeHelper(0x1bc, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		XSize, YSize);
	return result;
}

BOOL CVideoGrabberVC6::MotionDetector_SetCellSensitivity(long x, long y, long param3)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0x1bd, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		x, y, param3);
	return result;
}

void CVideoGrabberVC6::MotionDetector_SetGridSize(long x, long y)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0x1be, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 x, y);
}

void CVideoGrabberVC6::MotionDetector_GloballyIncOrDecSensitivity(long Value)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x1bf, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 Value);
}

void CVideoGrabberVC6::MotionDetector_ResetGlobalSensitivity(long Value)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x1c0, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 Value);
}

void CVideoGrabberVC6::MotionDetector_Reset()
{
	InvokeHelper(0x1c1, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CVideoGrabberVC6::MotionDetector_ShowGridDialog()
{
	InvokeHelper(0x1c2, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CVideoGrabberVC6::MotionDetector_TriggerNow()
{
	InvokeHelper(0x1c3, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

BOOL CVideoGrabberVC6::MotionDetector_UseThisReferenceSample(long Bitmap_, LPCTSTR BMPFile, LPCTSTR JPEGFile)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4 VTS_BSTR VTS_BSTR;
	InvokeHelper(0x1c4, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		Bitmap_, BMPFile, JPEGFile);
	return result;
}

BOOL CVideoGrabberVC6::OpenPlayer()
{
	BOOL result;
	InvokeHelper(0x1c5, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

BOOL CVideoGrabberVC6::OpenPlayerAtFramePositions(double StartFrame, double StopFrame, BOOL KeepBounds, BOOL CloseAndReopenIfAlreadyOpened)
{
	BOOL result;
	static BYTE parms[] =
		VTS_R8 VTS_R8 VTS_BOOL VTS_BOOL;
	InvokeHelper(0x1c6, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		StartFrame, StopFrame, KeepBounds, CloseAndReopenIfAlreadyOpened);
	return result;
}

BOOL CVideoGrabberVC6::OpenPlayerAtTimePositions(double StartTime, double StopTime, BOOL KeepBounds, BOOL CloseAndReopenIfAlreadyOpened)
{
	BOOL result;
	static BYTE parms[] =
		VTS_R8 VTS_R8 VTS_BOOL VTS_BOOL;
	InvokeHelper(0x1c7, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		StartTime, StopTime, KeepBounds, CloseAndReopenIfAlreadyOpened);
	return result;
}

BOOL CVideoGrabberVC6::PauseRecording()
{
	BOOL result;
	InvokeHelper(0x1c8, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::PausePlayer()
{
	InvokeHelper(0x1c9, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

BOOL CVideoGrabberVC6::Playlist(long PlaylistAction, LPCTSTR VideoClip)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4 VTS_BSTR;
	InvokeHelper(0x1ca, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		PlaylistAction, VideoClip);
	return result;
}

BOOL CVideoGrabberVC6::ReencodeVideoClip(LPCTSTR SourceVideoClip, LPCTSTR NewVideoClip, BOOL IncludeVideoStream, BOOL IncludeAudioStream, BOOL UseFrameGrabber, BOOL UseCurrentVideoCompressor, BOOL UseCurrentAudioCompressor)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR VTS_BOOL VTS_BOOL VTS_BOOL VTS_BOOL VTS_BOOL;
	InvokeHelper(0x1cb, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		SourceVideoClip, NewVideoClip, IncludeVideoStream, IncludeAudioStream, UseFrameGrabber, UseCurrentVideoCompressor, UseCurrentAudioCompressor);
	return result;
}

BOOL CVideoGrabberVC6::ResumeRecording()
{
	BOOL result;
	InvokeHelper(0x1cc, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::RewindPlayer()
{
	InvokeHelper(0x1cd, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CVideoGrabberVC6::RunPlayer()
{
	InvokeHelper(0x1ce, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CVideoGrabberVC6::RunPlayerBackwards()
{
	InvokeHelper(0x1cf, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

long CVideoGrabberVC6::VideoCompressorIndex(LPCTSTR param1)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x1d0, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		param1);
	return result;
}

long CVideoGrabberVC6::VideoDeviceIndex(LPCTSTR param1)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x1d1, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		param1);
	return result;
}

long CVideoGrabberVC6::VideoInputIndex(LPCTSTR param1)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x1d2, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		param1);
	return result;
}

long CVideoGrabberVC6::VideoSizeIndex(LPCTSTR param1)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x1d3, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		param1);
	return result;
}

long CVideoGrabberVC6::VideoSubtypeIndex(LPCTSTR param1)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x1d4, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		param1);
	return result;
}

BOOL CVideoGrabberVC6::SendDVCommand(long DVCommand)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x1d5, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		DVCommand);
	return result;
}

BOOL CVideoGrabberVC6::SetCameraControl(long Setting, BOOL SetAuto, BOOL SetDefault, long SetValue)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4 VTS_BOOL VTS_BOOL VTS_I4;
	InvokeHelper(0x1d6, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		Setting, SetAuto, SetDefault, SetValue);
	return result;
}

void CVideoGrabberVC6::SetColorKeys(unsigned long LowestRGBColorValue, unsigned long HighestRGBColorValue)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0x1d7, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 LowestRGBColorValue, HighestRGBColorValue);
}

void CVideoGrabberVC6::SetTextOverlayCustomVar(long VarIndex, LPCTSTR VarText)
{
	static BYTE parms[] =
		VTS_I4 VTS_BSTR;
	InvokeHelper(0x1d8, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 VarIndex, VarText);
}

BOOL CVideoGrabberVC6::SetVideoCompressionDefaults()
{
	BOOL result;
	InvokeHelper(0x1d9, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

BOOL CVideoGrabberVC6::SetVideoCompressionSettings(long DataRate, long KeyFrameRate, long PFramesPerKeyFrame, long WindowSize, double Quality)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_R8;
	InvokeHelper(0x1da, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		DataRate, KeyFrameRate, PFramesPerKeyFrame, WindowSize, Quality);
	return result;
}

BOOL CVideoGrabberVC6::SetVideoControlMode(BOOL FlipHorizontal, BOOL FlipVertical, BOOL ExternalTriggerEnable, BOOL Trigger)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BOOL VTS_BOOL VTS_BOOL VTS_BOOL;
	InvokeHelper(0x1db, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		FlipHorizontal, FlipVertical, ExternalTriggerEnable, Trigger);
	return result;
}

BOOL CVideoGrabberVC6::SetVideoQuality(long Setting, BOOL SetAuto, BOOL SetDefault, long SetValue)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4 VTS_BOOL VTS_BOOL VTS_I4;
	InvokeHelper(0x1dc, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		Setting, SetAuto, SetDefault, SetValue);
	return result;
}

BOOL CVideoGrabberVC6::SetVMR9ImageAdjustmentValue(BOOL MainDisplay, long VMR9ControlSetting, long param3, BOOL FixRange)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BOOL VTS_I4 VTS_I4 VTS_BOOL;
	InvokeHelper(0x1dd, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		MainDisplay, VMR9ControlSetting, param3, FixRange);
	return result;
}

BOOL CVideoGrabberVC6::ShowDialog(long Dialog)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x1de, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		Dialog);
	return result;
}

BOOL CVideoGrabberVC6::PausePreview()
{
	BOOL result;
	InvokeHelper(0x1df, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

BOOL CVideoGrabberVC6::ResetPreview()
{
	BOOL result;
	InvokeHelper(0x1e0, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

BOOL CVideoGrabberVC6::ResumePreview()
{
	BOOL result;
	InvokeHelper(0x1e1, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

BOOL CVideoGrabberVC6::RecordToNewFileNow()
{
	BOOL result;
	InvokeHelper(0x1e2, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::RetrieveInitialXYAfterRotation(long x, long y, long* OriginalX, long* OriginalY)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_PI4 VTS_PI4;
	InvokeHelper(0x1e3, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 x, y, OriginalX, OriginalY);
}

void CVideoGrabberVC6::SetImageOverlayAttributes(long LeftLocation, long TopLocation, long StretchedWidth, long StretchedHeight, BOOL Transparent, BOOL UseTransparentColor, long TransparentColorValue, BOOL AlphaBlend, long AlphaBlendValue)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_BOOL VTS_BOOL VTS_I4 VTS_BOOL VTS_I4;
	InvokeHelper(0x1e4, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 LeftLocation, TopLocation, StretchedWidth, StretchedHeight, Transparent, UseTransparentColor, TransparentColorValue, AlphaBlend, AlphaBlendValue);
}

BOOL CVideoGrabberVC6::SetImageOverlayFromBMPFile(LPCTSTR FileName)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x1e5, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		FileName);
	return result;
}

BOOL CVideoGrabberVC6::SetImageOverlayFromJPEGFile(LPCTSTR FileName)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x1e6, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		FileName);
	return result;
}

BOOL CVideoGrabberVC6::SetImageOverlayFromHBitmap(long Bitmap)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x1e7, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		Bitmap);
	return result;
}

BOOL CVideoGrabberVC6::SetLogoFromBMPFile(LPCTSTR FileName)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x1e8, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		FileName);
	return result;
}

BOOL CVideoGrabberVC6::SetLogoFromJPEGFile(LPCTSTR FileName)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x1e9, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		FileName);
	return result;
}

void CVideoGrabberVC6::SetHeaderAttribute(long HeaderAttribute, LPCTSTR Value)
{
	static BYTE parms[] =
		VTS_I4 VTS_BSTR;
	InvokeHelper(0x1ea, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 HeaderAttribute, Value);
}

BOOL CVideoGrabberVC6::SetLogoFromHBitmap(long Bitmap)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x1eb, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		Bitmap);
	return result;
}

BOOL CVideoGrabberVC6::ScreenRecordingUsingCoordinates(BOOL Enabled, long scLeft, long scTop, long scWidth, long scHeight)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BOOL VTS_I4 VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0x1ec, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		Enabled, scLeft, scTop, scWidth, scHeight);
	return result;
}

BOOL CVideoGrabberVC6::SendCameraCommand(long Pan, long Tilt, BOOL Relative)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_BOOL;
	InvokeHelper(0x1ed, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		Pan, Tilt, Relative);
	return result;
}

BOOL CVideoGrabberVC6::SetGPIO(long CustomID, long Index, long param3)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0x1ee, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		CustomID, Index, param3);
	return result;
}

BOOL CVideoGrabberVC6::SetWindowRecordingByHandle(long WindowHandle)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x1ef, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		WindowHandle);
	return result;
}

BOOL CVideoGrabberVC6::SetWindowRecordingByName(LPCTSTR WindowName, BOOL ExactMatch)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR VTS_BOOL;
	InvokeHelper(0x1f0, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		WindowName, ExactMatch);
	return result;
}

void CVideoGrabberVC6::SetVUMeterSetting(long ChannelIndex, long VUMeterSetting, long Value)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0x1f1, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 ChannelIndex, VUMeterSetting, Value);
}

BOOL CVideoGrabberVC6::StartAudioRecording()
{
	BOOL result;
	InvokeHelper(0x1f2, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

BOOL CVideoGrabberVC6::StartAudioRendering()
{
	BOOL result;
	InvokeHelper(0x1f3, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

BOOL CVideoGrabberVC6::StartPreview()
{
	BOOL result;
	InvokeHelper(0x1f4, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

BOOL CVideoGrabberVC6::StartRecording()
{
	BOOL result;
	InvokeHelper(0x1f5, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

BOOL CVideoGrabberVC6::StartReencoding()
{
	BOOL result;
	InvokeHelper(0x1f6, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

BOOL CVideoGrabberVC6::Stop()
{
	BOOL result;
	InvokeHelper(0x1f7, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::StopPreview()
{
	InvokeHelper(0x1f8, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CVideoGrabberVC6::StopPlayer()
{
	InvokeHelper(0x1f9, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CVideoGrabberVC6::StopRecording()
{
	InvokeHelper(0x1fa, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

BOOL CVideoGrabberVC6::StopReencoding()
{
	BOOL result;
	InvokeHelper(0x1fb, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

long CVideoGrabberVC6::ThirdPartyFilter_AddToList(long Location, LPCTSTR GUIDString, LPCTSTR Name, BOOL Enable, BOOL CanSaveFilterState)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_BSTR VTS_BSTR VTS_BOOL VTS_BOOL;
	InvokeHelper(0x1fc, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		Location, GUIDString, Name, Enable, CanSaveFilterState);
	return result;
}

BOOL CVideoGrabberVC6::ThirdPartyFilter_ClearList(long Location)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x1fd, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		Location);
	return result;
}

BOOL CVideoGrabberVC6::ThirdPartyFilter_Enable(long Location, long Index, BOOL Enable)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_BOOL;
	InvokeHelper(0x1fe, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		Location, Index, Enable);
	return result;
}

BOOL CVideoGrabberVC6::ThirdPartyFilter_RemoveFromList(long Location, long Index)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0x1ff, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		Location, Index);
	return result;
}

BOOL CVideoGrabberVC6::ThirdPartyFilter_ShowDialog(long Location, long Index)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0x200, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		Location, Index);
	return result;
}

BOOL CVideoGrabberVC6::TVGetMinMaxChannels(long* MinChannel, long* MaxChannel)
{
	BOOL result;
	static BYTE parms[] =
		VTS_PI4 VTS_PI4;
	InvokeHelper(0x201, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		MinChannel, MaxChannel);
	return result;
}

BOOL CVideoGrabberVC6::TVClearFrequencyOverrides()
{
	BOOL result;
	InvokeHelper(0x202, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

long CVideoGrabberVC6::TVSetChannelFrequencyOverride(long TVChannel, long FrequencyInHz)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0x203, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		TVChannel, FrequencyInHz);
	return result;
}

BOOL CVideoGrabberVC6::TVStartAutoScan()
{
	BOOL result;
	InvokeHelper(0x204, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

BOOL CVideoGrabberVC6::TVStartAutoScanChannels(long MinChannel, long MaxChannel, long Interval_ms)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0x205, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		MinChannel, MaxChannel, Interval_ms);
	return result;
}

BOOL CVideoGrabberVC6::TVStopAutoScan()
{
	BOOL result;
	InvokeHelper(0x206, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::UseNearestVideoSize(long PreferredWidth, long PreferredHeight, BOOL Stretch)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_BOOL;
	InvokeHelper(0x207, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 PreferredWidth, PreferredHeight, Stretch);
}

BOOL CVideoGrabberVC6::VDECGetHorizontalLocked(long* plLocked)
{
	BOOL result;
	static BYTE parms[] =
		VTS_PI4;
	InvokeHelper(0x208, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		plLocked);
	return result;
}

BOOL CVideoGrabberVC6::VDECGetNumberOfLines(long* plNumberOfLines)
{
	BOOL result;
	static BYTE parms[] =
		VTS_PI4;
	InvokeHelper(0x209, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		plNumberOfLines);
	return result;
}

BOOL CVideoGrabberVC6::VDECGetOutputEnable(long* plOutputEnable)
{
	BOOL result;
	static BYTE parms[] =
		VTS_PI4;
	InvokeHelper(0x20a, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		plOutputEnable);
	return result;
}

BOOL CVideoGrabberVC6::VDECGetVCRHorizontalLocking(long* plVCRHorizontalLocking)
{
	BOOL result;
	static BYTE parms[] =
		VTS_PI4;
	InvokeHelper(0x20b, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		plVCRHorizontalLocking);
	return result;
}

BOOL CVideoGrabberVC6::VDECPutTVFormat(long lAnalogVideoStandard)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x20c, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		lAnalogVideoStandard);
	return result;
}

BOOL CVideoGrabberVC6::VDECPutOutputEnable(long lOutputEnable)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x20d, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		lOutputEnable);
	return result;
}

BOOL CVideoGrabberVC6::VDECPutVCRHorizontalLocking(long lVCRHorizontalLocking)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x20e, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		lVCRHorizontalLocking);
	return result;
}

BOOL CVideoGrabberVC6::VideoFromImages_CreateSetOfBitmaps()
{
	BOOL result;
	InvokeHelper(0x20f, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

long CVideoGrabberVC6::VideoQualityValue(long Setting)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x210, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		Setting);
	return result;
}

BOOL CVideoGrabberVC6::VideoQualityAuto(long Setting)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x211, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		Setting);
	return result;
}

long CVideoGrabberVC6::VideoQualityDefault(long Setting)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x212, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		Setting);
	return result;
}

long CVideoGrabberVC6::VideoQualityMin(long Setting)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x213, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		Setting);
	return result;
}

long CVideoGrabberVC6::VideoQualityMax(long Setting)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x214, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		Setting);
	return result;
}

long CVideoGrabberVC6::VideoQualityStep(long Setting)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x215, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		Setting);
	return result;
}

BOOL CVideoGrabberVC6::GetGlobal_IsVideoDeviceConnected(long DeviceIndex)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x216, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		DeviceIndex);
	return result;
}

BOOL CVideoGrabberVC6::GetGlobal_IsAudioDeviceConnected(long DeviceIndex)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x217, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		DeviceIndex);
	return result;
}

BOOL CVideoGrabberVC6::GetGlobal_IsAudioRendererConnected(long RendererIndex)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x218, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		RendererIndex);
	return result;
}

BOOL CVideoGrabberVC6::GetGlobal_IsDVDevice(long Index)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x219, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		Index);
	return result;
}

BOOL CVideoGrabberVC6::GetGlobal_IsDirectX8OrHigherInstalled()
{
	BOOL result;
	InvokeHelper(0x21a, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

long CVideoGrabberVC6::GetGlobal_MonitorsCount()
{
	long result;
	InvokeHelper(0x21b, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CVideoGrabberVC6::GetAlignment()
{
	long result;
	InvokeHelper(0x21c, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetAlignment(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x21c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

CString CVideoGrabberVC6::GetCaption()
{
	CString result;
	InvokeHelper(DISPID_CAPTION, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetCaption(LPCTSTR lpszNewValue)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(DISPID_CAPTION, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 lpszNewValue);
}

unsigned long CVideoGrabberVC6::GetColor()
{
	unsigned long result;
	InvokeHelper(DISPID_BACKCOLOR, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetColor(unsigned long newValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(DISPID_BACKCOLOR, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 newValue);
}

BOOL CVideoGrabberVC6::GetEnabled()
{
	BOOL result;
	InvokeHelper(DISPID_ENABLED, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetEnabled(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(DISPID_ENABLED, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CVideoGrabberVC6::GetFullRepaint()
{
	BOOL result;
	InvokeHelper(0x21d, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetFullRepaint(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x21d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CVideoGrabberVC6::GetParentColor()
{
	BOOL result;
	InvokeHelper(0x21e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetParentColor(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x21e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CVideoGrabberVC6::GetVisible()
{
	BOOL result;
	InvokeHelper(0x21f, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetVisible(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x21f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

long CVideoGrabberVC6::GetApplicationPriority()
{
	long result;
	InvokeHelper(0x220, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetApplicationPriority(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x220, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

long CVideoGrabberVC6::GetASFAudioBitRate()
{
	long result;
	InvokeHelper(0x221, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetASFAudioBitRate(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x221, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

long CVideoGrabberVC6::GetASFAudioChannels()
{
	long result;
	InvokeHelper(0x222, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetASFAudioChannels(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x222, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

long CVideoGrabberVC6::GetASFDeinterlaceMode()
{
	long result;
	InvokeHelper(0x223, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetASFDeinterlaceMode(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x223, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

BOOL CVideoGrabberVC6::GetASFFixedFrameRate()
{
	BOOL result;
	InvokeHelper(0x224, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetASFFixedFrameRate(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x224, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

CString CVideoGrabberVC6::GetASFMediaServerPublishingPoint()
{
	CString result;
	InvokeHelper(0x225, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetASFMediaServerPublishingPoint(LPCTSTR lpszNewValue)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x225, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 lpszNewValue);
}

long CVideoGrabberVC6::GetASFNetworkPort()
{
	long result;
	InvokeHelper(0x226, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetASFNetworkPort(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x226, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

long CVideoGrabberVC6::GetASFNetworkMaxUsers()
{
	long result;
	InvokeHelper(0x227, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetASFNetworkMaxUsers(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x227, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

long CVideoGrabberVC6::GetASFProfile()
{
	long result;
	InvokeHelper(0x228, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetASFProfile(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x228, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

CString CVideoGrabberVC6::GetASFProfileFromCustomFile()
{
	CString result;
	InvokeHelper(0x229, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetASFProfileFromCustomFile(LPCTSTR lpszNewValue)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x229, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 lpszNewValue);
}

long CVideoGrabberVC6::GetASFVideoBitRate()
{
	long result;
	InvokeHelper(0x22a, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetASFVideoBitRate(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x22a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

long CVideoGrabberVC6::GetASFVideoHeight()
{
	long result;
	InvokeHelper(0x22b, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetASFVideoHeight(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x22b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

long CVideoGrabberVC6::GetASFVideoMaxKeyFrameSpacing()
{
	long result;
	InvokeHelper(0x22c, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetASFVideoMaxKeyFrameSpacing(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x22c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

long CVideoGrabberVC6::GetASFVideoQuality()
{
	long result;
	InvokeHelper(0x22d, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetASFVideoQuality(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x22d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

long CVideoGrabberVC6::GetASFVideoWidth()
{
	long result;
	InvokeHelper(0x22e, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetASFVideoWidth(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x22e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

long CVideoGrabberVC6::GetNetworkStreaming()
{
	long result;
	InvokeHelper(0x22f, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetNetworkStreaming(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x22f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

long CVideoGrabberVC6::GetNetworkStreamingType()
{
	long result;
	InvokeHelper(0x230, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetNetworkStreamingType(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x230, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

BOOL CVideoGrabberVC6::GetAssociateAudioAndVideoDevices()
{
	BOOL result;
	InvokeHelper(0x231, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetAssociateAudioAndVideoDevices(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x231, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CVideoGrabberVC6::GetAVIDurationUpdated()
{
	BOOL result;
	InvokeHelper(0x232, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetAVIDurationUpdated(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x232, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

long CVideoGrabberVC6::GetAudioDevice()
{
	long result;
	InvokeHelper(0x233, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetAudioDevice(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x233, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

long CVideoGrabberVC6::GetAudioFormat()
{
	long result;
	InvokeHelper(0x234, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetAudioFormat(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x234, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

BOOL CVideoGrabberVC6::GetAudioDeviceRendering()
{
	BOOL result;
	InvokeHelper(0x235, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetAudioDeviceRendering(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x235, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CVideoGrabberVC6::GetAudioPeakEvent()
{
	BOOL result;
	InvokeHelper(0x236, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetAudioPeakEvent(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x236, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CVideoGrabberVC6::GetAudioRecording()
{
	BOOL result;
	InvokeHelper(0x237, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetAudioRecording(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x237, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

long CVideoGrabberVC6::GetAudioRenderer()
{
	long result;
	InvokeHelper(0x238, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetAudioRenderer(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x238, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

long CVideoGrabberVC6::GetAudioSource()
{
	long result;
	InvokeHelper(0x239, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetAudioSource(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x239, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

long CVideoGrabberVC6::GetVuMeter()
{
	long result;
	InvokeHelper(0x23a, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetVuMeter(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x23a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

BOOL CVideoGrabberVC6::GetAutoConnectRelatedPins()
{
	BOOL result;
	InvokeHelper(0x23b, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetAutoConnectRelatedPins(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x23b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

long CVideoGrabberVC6::GetAutoFileName()
{
	long result;
	InvokeHelper(0x23c, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetAutoFileName(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x23c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

long CVideoGrabberVC6::GetAutoFileNameMinDigits()
{
	long result;
	InvokeHelper(0x23d, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetAutoFileNameMinDigits(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x23d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

CString CVideoGrabberVC6::GetAutoFilePrefix()
{
	CString result;
	InvokeHelper(0x23e, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetAutoFilePrefix(LPCTSTR lpszNewValue)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x23e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 lpszNewValue);
}

BOOL CVideoGrabberVC6::GetAutoRefreshPreview()
{
	BOOL result;
	InvokeHelper(0x23f, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetAutoRefreshPreview(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x23f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CVideoGrabberVC6::GetAutoStartPlayer()
{
	BOOL result;
	InvokeHelper(0x240, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetAutoStartPlayer(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x240, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CVideoGrabberVC6::GetAVIFormatOpenDML()
{
	BOOL result;
	InvokeHelper(0x241, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetAVIFormatOpenDML(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x241, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

unsigned long CVideoGrabberVC6::GetBackgroundColor()
{
	unsigned long result;
	InvokeHelper(0x242, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetBackgroundColor(unsigned long newValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x242, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 newValue);
}

long CVideoGrabberVC6::GetBorderStyle()
{
	long result;
	InvokeHelper(0x243, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetBorderStyle(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x243, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

long CVideoGrabberVC6::GetBurstCount()
{
	long result;
	InvokeHelper(0x244, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetBurstCount(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x244, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

long CVideoGrabberVC6::GetBurstInterval()
{
	long result;
	InvokeHelper(0x245, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetBurstInterval(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x245, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

BOOL CVideoGrabberVC6::GetBurstMode()
{
	BOOL result;
	InvokeHelper(0x246, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetBurstMode(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x246, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

long CVideoGrabberVC6::GetBurstType()
{
	long result;
	InvokeHelper(0x247, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetBurstType(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x247, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

BOOL CVideoGrabberVC6::GetCameraControlSettings()
{
	BOOL result;
	InvokeHelper(0x248, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetCameraControlSettings(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x248, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

CString CVideoGrabberVC6::GetCaptureFileExt()
{
	CString result;
	InvokeHelper(0x249, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetCaptureFileExt(LPCTSTR lpszNewValue)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x249, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 lpszNewValue);
}

BOOL CVideoGrabberVC6::GetColorKeyEnabled()
{
	BOOL result;
	InvokeHelper(0x24a, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetColorKeyEnabled(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x24a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

long CVideoGrabberVC6::GetCompressionMode()
{
	long result;
	InvokeHelper(0x24b, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetCompressionMode(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x24b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

long CVideoGrabberVC6::GetCompressionType()
{
	long result;
	InvokeHelper(0x24c, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetCompressionType(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x24c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

BOOL CVideoGrabberVC6::GetDisplay_Active()
{
	BOOL result;
	InvokeHelper(0x24d, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetDisplay_Active(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x24d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CVideoGrabberVC6::GetDisplay_AutoSize()
{
	BOOL result;
	InvokeHelper(0x24e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetDisplay_AutoSize(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x24e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

long CVideoGrabberVC6::GetDisplay_AspectRatio()
{
	long result;
	InvokeHelper(0x24f, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetDisplay_AspectRatio(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x24f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

BOOL CVideoGrabberVC6::GetDisplay_Embedded()
{
	BOOL result;
	InvokeHelper(0x250, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetDisplay_Embedded(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x250, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CVideoGrabberVC6::GetDisplay_FullScreen()
{
	BOOL result;
	InvokeHelper(0x251, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetDisplay_FullScreen(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x251, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

long CVideoGrabberVC6::GetDisplay_Height()
{
	long result;
	InvokeHelper(0x252, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetDisplay_Height(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x252, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

long CVideoGrabberVC6::GetDisplay_Left()
{
	long result;
	InvokeHelper(0x253, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetDisplay_Left(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x253, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

BOOL CVideoGrabberVC6::GetDisplay_StayOnTop()
{
	BOOL result;
	InvokeHelper(0x254, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetDisplay_StayOnTop(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x254, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

long CVideoGrabberVC6::GetDisplay_Monitor()
{
	long result;
	InvokeHelper(0x255, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetDisplay_Monitor(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x255, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

BOOL CVideoGrabberVC6::GetDisplay_MouseMovesWindow()
{
	BOOL result;
	InvokeHelper(0x256, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetDisplay_MouseMovesWindow(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x256, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

long CVideoGrabberVC6::GetDisplay_Top()
{
	long result;
	InvokeHelper(0x257, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetDisplay_Top(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x257, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

BOOL CVideoGrabberVC6::GetDisplay_VideoPortEnabled()
{
	BOOL result;
	InvokeHelper(0x258, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetDisplay_VideoPortEnabled(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x258, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

long CVideoGrabberVC6::GetDisplay_Width()
{
	long result;
	InvokeHelper(0x259, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetDisplay_Width(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x259, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

long CVideoGrabberVC6::GetDroppedFramesPollingInterval()
{
	long result;
	InvokeHelper(0x25a, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetDroppedFramesPollingInterval(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x25a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

BOOL CVideoGrabberVC6::GetDualDisplay_Active()
{
	BOOL result;
	InvokeHelper(0x25b, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetDualDisplay_Active(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x25b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CVideoGrabberVC6::GetDualDisplay_AutoSize()
{
	BOOL result;
	InvokeHelper(0x25c, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetDualDisplay_AutoSize(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x25c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

long CVideoGrabberVC6::GetDualDisplay_AspectRatio()
{
	long result;
	InvokeHelper(0x25d, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetDualDisplay_AspectRatio(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x25d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

BOOL CVideoGrabberVC6::GetDualDisplay_Embedded()
{
	BOOL result;
	InvokeHelper(0x25e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetDualDisplay_Embedded(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x25e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CVideoGrabberVC6::GetDualDisplay_FullScreen()
{
	BOOL result;
	InvokeHelper(0x25f, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetDualDisplay_FullScreen(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x25f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

long CVideoGrabberVC6::GetDualDisplay_Height()
{
	long result;
	InvokeHelper(0x260, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetDualDisplay_Height(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x260, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

long CVideoGrabberVC6::GetDualDisplay_Left()
{
	long result;
	InvokeHelper(0x261, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetDualDisplay_Left(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x261, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

BOOL CVideoGrabberVC6::GetDualDisplay_StayOnTop()
{
	BOOL result;
	InvokeHelper(0x262, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetDualDisplay_StayOnTop(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x262, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

long CVideoGrabberVC6::GetDualDisplay_Monitor()
{
	long result;
	InvokeHelper(0x263, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetDualDisplay_Monitor(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x263, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

BOOL CVideoGrabberVC6::GetDualDisplay_MouseMovesWindow()
{
	BOOL result;
	InvokeHelper(0x264, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetDualDisplay_MouseMovesWindow(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x264, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

long CVideoGrabberVC6::GetDualDisplay_Top()
{
	long result;
	InvokeHelper(0x265, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetDualDisplay_Top(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x265, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

BOOL CVideoGrabberVC6::GetDualDisplay_VideoPortEnabled()
{
	BOOL result;
	InvokeHelper(0x266, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetDualDisplay_VideoPortEnabled(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x266, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

long CVideoGrabberVC6::GetDualDisplay_Width()
{
	long result;
	InvokeHelper(0x267, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetDualDisplay_Width(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x267, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

long CVideoGrabberVC6::GetDVDiscontinuityMinimumInterval()
{
	long result;
	InvokeHelper(0x268, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetDVDiscontinuityMinimumInterval(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x268, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

long CVideoGrabberVC6::GetDVEncoder_VideoFormat()
{
	long result;
	InvokeHelper(0x269, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetDVEncoder_VideoFormat(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x269, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

long CVideoGrabberVC6::GetDVEncoder_VideoResolution()
{
	long result;
	InvokeHelper(0x26a, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetDVEncoder_VideoResolution(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x26a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

long CVideoGrabberVC6::GetDVEncoder_VideoStandard()
{
	long result;
	InvokeHelper(0x26b, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetDVEncoder_VideoStandard(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x26b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

BOOL CVideoGrabberVC6::GetDVRgb219()
{
	BOOL result;
	InvokeHelper(0x26c, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetDVRgb219(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x26c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CVideoGrabberVC6::GetDVReduceFrameRate()
{
	BOOL result;
	InvokeHelper(0x26d, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetDVReduceFrameRate(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x26d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CVideoGrabberVC6::GetDVRecordingInNativeFormatSeparatesStreams()
{
	BOOL result;
	InvokeHelper(0x26e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetDVRecordingInNativeFormatSeparatesStreams(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x26e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CVideoGrabberVC6::GetEventNotificationSynchrone()
{
	BOOL result;
	InvokeHelper(0x26f, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetEventNotificationSynchrone(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x26f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CVideoGrabberVC6::GetCropping_Enabled()
{
	BOOL result;
	InvokeHelper(0x270, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetCropping_Enabled(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x270, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

long CVideoGrabberVC6::GetCropping_Height()
{
	long result;
	InvokeHelper(0x271, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetCropping_Height(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x271, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

BOOL CVideoGrabberVC6::GetCropping_Outbounds()
{
	BOOL result;
	InvokeHelper(0x272, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetCropping_Outbounds(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x272, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

long CVideoGrabberVC6::GetCropping_Width()
{
	long result;
	InvokeHelper(0x273, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetCropping_Width(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x273, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

long CVideoGrabberVC6::GetCropping_X()
{
	long result;
	InvokeHelper(0x274, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetCropping_X(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x274, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

long CVideoGrabberVC6::GetCropping_Y()
{
	long result;
	InvokeHelper(0x275, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetCropping_Y(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x275, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

double CVideoGrabberVC6::GetCropping_Zoom()
{
	double result;
	InvokeHelper(0x276, DISPATCH_PROPERTYGET, VT_R8, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetCropping_Zoom(double newValue)
{
	static BYTE parms[] =
		VTS_R8;
	InvokeHelper(0x276, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 newValue);
}

BOOL CVideoGrabberVC6::GetFixFlickerOrBlackCapture()
{
	BOOL result;
	InvokeHelper(0x277, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetFixFlickerOrBlackCapture(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x277, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CVideoGrabberVC6::GetFrameCaptureWithoutOverlay()
{
	BOOL result;
	InvokeHelper(0x278, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetFrameCaptureWithoutOverlay(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x278, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

long CVideoGrabberVC6::GetFrameCaptureHeight()
{
	long result;
	InvokeHelper(0x279, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetFrameCaptureHeight(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x279, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

long CVideoGrabberVC6::GetFrameCaptureWidth()
{
	long result;
	InvokeHelper(0x27a, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetFrameCaptureWidth(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x27a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

long CVideoGrabberVC6::GetFrameCaptureZoomSize()
{
	long result;
	InvokeHelper(0x27b, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetFrameCaptureZoomSize(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x27b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

long CVideoGrabberVC6::GetFrameGrabber()
{
	long result;
	InvokeHelper(0x27c, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetFrameGrabber(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x27c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

long CVideoGrabberVC6::GetFrameGrabberRGBFormat()
{
	long result;
	InvokeHelper(0x27d, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetFrameGrabberRGBFormat(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x27d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

double CVideoGrabberVC6::GetFrameRate()
{
	double result;
	InvokeHelper(0x27e, DISPATCH_PROPERTYGET, VT_R8, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetFrameRate(double newValue)
{
	static BYTE parms[] =
		VTS_R8;
	InvokeHelper(0x27e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 newValue);
}

CString CVideoGrabberVC6::GetLicenseString()
{
	CString result;
	InvokeHelper(0x27f, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetLicenseString(LPCTSTR lpszNewValue)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x27f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 lpszNewValue);
}

long CVideoGrabberVC6::GetJPEGPerformance()
{
	long result;
	InvokeHelper(0x280, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetJPEGPerformance(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x280, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

BOOL CVideoGrabberVC6::GetJPEGProgressiveDisplay()
{
	BOOL result;
	InvokeHelper(0x281, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetJPEGProgressiveDisplay(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x281, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

short CVideoGrabberVC6::GetJPEGQuality()
{
	short result;
	InvokeHelper(0x282, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetJPEGQuality(short nNewValue)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x282, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

BOOL CVideoGrabberVC6::GetImageOverlayEnabled()
{
	BOOL result;
	InvokeHelper(0x283, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetImageOverlayEnabled(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x283, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CVideoGrabberVC6::GetLogoDisplayed()
{
	BOOL result;
	InvokeHelper(0x284, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetLogoDisplayed(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x284, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

long CVideoGrabberVC6::GetLogoLayout()
{
	long result;
	InvokeHelper(0x285, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetLogoLayout(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x285, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

long CVideoGrabberVC6::GetMixAudioSamples_CurrentSourceLevel()
{
	long result;
	InvokeHelper(0x286, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetMixAudioSamples_CurrentSourceLevel(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x286, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

long CVideoGrabberVC6::GetMixAudioSamples_ExternalSourceLevel()
{
	long result;
	InvokeHelper(0x287, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetMixAudioSamples_ExternalSourceLevel(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x287, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

BOOL CVideoGrabberVC6::GetMotionDetector_CompareBlue()
{
	BOOL result;
	InvokeHelper(0x288, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetMotionDetector_CompareBlue(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x288, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CVideoGrabberVC6::GetMotionDetector_CompareGreen()
{
	BOOL result;
	InvokeHelper(0x289, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetMotionDetector_CompareGreen(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x289, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CVideoGrabberVC6::GetMotionDetector_GreyScale()
{
	BOOL result;
	InvokeHelper(0x28a, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetMotionDetector_GreyScale(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x28a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CVideoGrabberVC6::GetMotionDetector_CompareRed()
{
	BOOL result;
	InvokeHelper(0x28b, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetMotionDetector_CompareRed(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x28b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CVideoGrabberVC6::GetMotionDetector_Enabled()
{
	BOOL result;
	InvokeHelper(0x28c, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetMotionDetector_Enabled(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x28c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

CString CVideoGrabberVC6::GetMotionDetector_Grid()
{
	CString result;
	InvokeHelper(0x28d, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetMotionDetector_Grid(LPCTSTR lpszNewValue)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x28d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 lpszNewValue);
}

double CVideoGrabberVC6::GetMotionDetector_MaxDetectionsPerSecond()
{
	double result;
	InvokeHelper(0x28e, DISPATCH_PROPERTYGET, VT_R8, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetMotionDetector_MaxDetectionsPerSecond(double newValue)
{
	static BYTE parms[] =
		VTS_R8;
	InvokeHelper(0x28e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 newValue);
}

long CVideoGrabberVC6::GetMotionDetector_ReduceCPULoad()
{
	long result;
	InvokeHelper(0x28f, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetMotionDetector_ReduceCPULoad(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x28f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

BOOL CVideoGrabberVC6::GetMotionDetector_ReduceVideoNoise()
{
	BOOL result;
	InvokeHelper(0x290, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetMotionDetector_ReduceVideoNoise(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x290, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CVideoGrabberVC6::GetMotionDetector_Triggered()
{
	BOOL result;
	InvokeHelper(0x291, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetMotionDetector_Triggered(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x291, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CVideoGrabberVC6::GetMultiplexedInputEmulation()
{
	BOOL result;
	InvokeHelper(0x292, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetMultiplexedInputEmulation(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x292, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

long CVideoGrabberVC6::GetMultiplexedRole()
{
	long result;
	InvokeHelper(0x293, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetMultiplexedRole(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x293, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

long CVideoGrabberVC6::GetMultiplexedSwitchDelay()
{
	long result;
	InvokeHelper(0x294, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetMultiplexedSwitchDelay(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x294, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

long CVideoGrabberVC6::GetMultiplexedStabilizationDelay()
{
	long result;
	InvokeHelper(0x295, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetMultiplexedStabilizationDelay(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x295, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

BOOL CVideoGrabberVC6::GetMuteAudioRendering()
{
	BOOL result;
	InvokeHelper(0x296, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetMuteAudioRendering(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x296, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

long CVideoGrabberVC6::GetNotificationMethod()
{
	long result;
	InvokeHelper(0x297, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetNotificationMethod(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x297, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

long CVideoGrabberVC6::GetNotificationSleepTime()
{
	long result;
	InvokeHelper(0x298, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetNotificationSleepTime(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x298, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

long CVideoGrabberVC6::GetNotificationPriority()
{
	long result;
	InvokeHelper(0x299, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetNotificationPriority(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x299, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

BOOL CVideoGrabberVC6::GetOverlayAfterTransform()
{
	BOOL result;
	InvokeHelper(0x29a, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetOverlayAfterTransform(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x29a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CVideoGrabberVC6::GetPlayerAudioRendering()
{
	BOOL result;
	InvokeHelper(0x29b, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetPlayerAudioRendering(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x29b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

long CVideoGrabberVC6::GetPlayerDVSize()
{
	long result;
	InvokeHelper(0x29c, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetPlayerDVSize(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x29c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

long CVideoGrabberVC6::GetPlayerFastSeekSpeedRatio()
{
	long result;
	InvokeHelper(0x29d, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetPlayerFastSeekSpeedRatio(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x29d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

CString CVideoGrabberVC6::GetPlayerFileName()
{
	CString result;
	InvokeHelper(0x29e, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetPlayerFileName(LPCTSTR lpszNewValue)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x29e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 lpszNewValue);
}

CString CVideoGrabberVC6::GetPlayerForcedCodec()
{
	CString result;
	InvokeHelper(0x29f, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetPlayerForcedCodec(LPCTSTR lpszNewValue)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x29f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 lpszNewValue);
}

BOOL CVideoGrabberVC6::GetPlayerRefreshPausedDisplay()
{
	BOOL result;
	InvokeHelper(0x2a0, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetPlayerRefreshPausedDisplay(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x2a0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

double CVideoGrabberVC6::GetPlayerRefreshPausedDisplayFrameRate()
{
	double result;
	InvokeHelper(0x2a1, DISPATCH_PROPERTYGET, VT_R8, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetPlayerRefreshPausedDisplayFrameRate(double newValue)
{
	static BYTE parms[] =
		VTS_R8;
	InvokeHelper(0x2a1, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 newValue);
}

double CVideoGrabberVC6::GetPlayerSpeedRatio()
{
	double result;
	InvokeHelper(0x2a2, DISPATCH_PROPERTYGET, VT_R8, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetPlayerSpeedRatio(double newValue)
{
	static BYTE parms[] =
		VTS_R8;
	InvokeHelper(0x2a2, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 newValue);
}

BOOL CVideoGrabberVC6::GetPreallocCapFileCopiedAfterRecording()
{
	BOOL result;
	InvokeHelper(0x2a3, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetPreallocCapFileCopiedAfterRecording(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x2a3, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CVideoGrabberVC6::GetPreallocCapFileEnabled()
{
	BOOL result;
	InvokeHelper(0x2a4, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetPreallocCapFileEnabled(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x2a4, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

CString CVideoGrabberVC6::GetPreallocCapFileName()
{
	CString result;
	InvokeHelper(0x2a5, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetPreallocCapFileName(LPCTSTR lpszNewValue)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x2a5, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 lpszNewValue);
}

long CVideoGrabberVC6::GetPreallocCapFileSizeInMB()
{
	long result;
	InvokeHelper(0x2a6, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetPreallocCapFileSizeInMB(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x2a6, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

long CVideoGrabberVC6::GetPreviewZoomSize()
{
	long result;
	InvokeHelper(0x2a7, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetPreviewZoomSize(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x2a7, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

CString CVideoGrabberVC6::GetRecordingFileName()
{
	CString result;
	InvokeHelper(0x2a8, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetRecordingFileName(LPCTSTR lpszNewValue)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x2a8, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 lpszNewValue);
}

BOOL CVideoGrabberVC6::GetRecordingInNativeFormat()
{
	BOOL result;
	InvokeHelper(0x2a9, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetRecordingInNativeFormat(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x2a9, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

long CVideoGrabberVC6::GetRecordingMethod()
{
	long result;
	InvokeHelper(0x2aa, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetRecordingMethod(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x2aa, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

BOOL CVideoGrabberVC6::GetRecordingPauseCreatesNewFile()
{
	BOOL result;
	InvokeHelper(0x2ab, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetRecordingPauseCreatesNewFile(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x2ab, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CVideoGrabberVC6::GetRecordingOnMotion_Enabled()
{
	BOOL result;
	InvokeHelper(0x2ac, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetRecordingOnMotion_Enabled(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x2ac, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

double CVideoGrabberVC6::GetRecordingOnMotion_MotionThreshold()
{
	double result;
	InvokeHelper(0x2ad, DISPATCH_PROPERTYGET, VT_R8, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetRecordingOnMotion_MotionThreshold(double newValue)
{
	static BYTE parms[] =
		VTS_R8;
	InvokeHelper(0x2ad, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 newValue);
}

long CVideoGrabberVC6::GetRecordingOnMotion_NoMotionPauseDelayMs()
{
	long result;
	InvokeHelper(0x2ae, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetRecordingOnMotion_NoMotionPauseDelayMs(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x2ae, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

CString CVideoGrabberVC6::GetReencoding_NewVideoClip()
{
	CString result;
	InvokeHelper(0x2af, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetReencoding_NewVideoClip(LPCTSTR lpszNewValue)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x2af, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 lpszNewValue);
}

CString CVideoGrabberVC6::GetReencoding_SourceVideoClip()
{
	CString result;
	InvokeHelper(0x2b0, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetReencoding_SourceVideoClip(LPCTSTR lpszNewValue)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x2b0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 lpszNewValue);
}

double CVideoGrabberVC6::GetReencoding_StartTime()
{
	double result;
	InvokeHelper(0x2b1, DISPATCH_PROPERTYGET, VT_R8, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetReencoding_StartTime(double newValue)
{
	static BYTE parms[] =
		VTS_R8;
	InvokeHelper(0x2b1, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 newValue);
}

double CVideoGrabberVC6::GetReencoding_StopTime()
{
	double result;
	InvokeHelper(0x2b2, DISPATCH_PROPERTYGET, VT_R8, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetReencoding_StopTime(double newValue)
{
	static BYTE parms[] =
		VTS_R8;
	InvokeHelper(0x2b2, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 newValue);
}

BOOL CVideoGrabberVC6::GetReencoding_IncludeAudioStream()
{
	BOOL result;
	InvokeHelper(0x2b3, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetReencoding_IncludeAudioStream(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x2b3, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CVideoGrabberVC6::GetReencoding_IncludeVideoStream()
{
	BOOL result;
	InvokeHelper(0x2b4, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetReencoding_IncludeVideoStream(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x2b4, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

long CVideoGrabberVC6::GetReencoding_Method()
{
	long result;
	InvokeHelper(0x2b5, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetReencoding_Method(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x2b5, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

BOOL CVideoGrabberVC6::GetReencoding_UseAudioCompressor()
{
	BOOL result;
	InvokeHelper(0x2b6, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetReencoding_UseAudioCompressor(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x2b6, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CVideoGrabberVC6::GetReencoding_UseFrameGrabber()
{
	BOOL result;
	InvokeHelper(0x2b7, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetReencoding_UseFrameGrabber(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x2b7, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CVideoGrabberVC6::GetReencoding_UseVideoCompressor()
{
	BOOL result;
	InvokeHelper(0x2b8, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetReencoding_UseVideoCompressor(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x2b8, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CVideoGrabberVC6::GetReencoding_WMVOutput()
{
	BOOL result;
	InvokeHelper(0x2b9, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetReencoding_WMVOutput(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x2b9, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

long CVideoGrabberVC6::GetRawSampleCaptureLocation()
{
	long result;
	InvokeHelper(0x2ba, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetRawSampleCaptureLocation(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x2ba, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

BOOL CVideoGrabberVC6::GetRawVideoSampleCapture()
{
	BOOL result;
	InvokeHelper(0x2bb, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetRawVideoSampleCapture(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x2bb, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CVideoGrabberVC6::GetRawAudioSampleCapture()
{
	BOOL result;
	InvokeHelper(0x2bc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetRawAudioSampleCapture(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x2bc, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CVideoGrabberVC6::GetRawCaptureAsyncEvent()
{
	BOOL result;
	InvokeHelper(0x2bd, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetRawCaptureAsyncEvent(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x2bd, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

long CVideoGrabberVC6::GetRecordingSize()
{
	long result;
	InvokeHelper(0x2be, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetRecordingSize(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x2be, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

BOOL CVideoGrabberVC6::GetScreenRecordingThroughClipboard()
{
	BOOL result;
	InvokeHelper(0x2bf, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetScreenRecordingThroughClipboard(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x2bf, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CVideoGrabberVC6::GetScreenRecordingWithCursor()
{
	BOOL result;
	InvokeHelper(0x2c0, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetScreenRecordingWithCursor(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x2c0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CVideoGrabberVC6::GetShapeOverlayEnabled()
{
	BOOL result;
	InvokeHelper(0x2c1, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetShapeOverlayEnabled(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x2c1, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CVideoGrabberVC6::GetSpeakerControl()
{
	BOOL result;
	InvokeHelper(0x2c2, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetSpeakerControl(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x2c2, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

CString CVideoGrabberVC6::GetStoragePath()
{
	CString result;
	InvokeHelper(0x2c3, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetStoragePath(LPCTSTR lpszNewValue)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x2c3, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 lpszNewValue);
}

BOOL CVideoGrabberVC6::GetStoreDeviceSettingsInRegistry()
{
	BOOL result;
	InvokeHelper(0x2c4, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetStoreDeviceSettingsInRegistry(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x2c4, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CVideoGrabberVC6::GetSynchronized()
{
	BOOL result;
	InvokeHelper(0x2c5, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetSynchronized(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x2c5, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CVideoGrabberVC6::GetSyncCommands()
{
	BOOL result;
	InvokeHelper(0x2c6, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetSyncCommands(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x2c6, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

long CVideoGrabberVC6::GetSyncPreview()
{
	long result;
	InvokeHelper(0x2c7, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetSyncPreview(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x2c7, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

BOOL CVideoGrabberVC6::GetTextOverlay_Enabled()
{
	BOOL result;
	InvokeHelper(0x2c8, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetTextOverlay_Enabled(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x2c8, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

long CVideoGrabberVC6::GetTextOverlay_Left()
{
	long result;
	InvokeHelper(0x2c9, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetTextOverlay_Left(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x2c9, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

long CVideoGrabberVC6::GetTextOverlay_Top()
{
	long result;
	InvokeHelper(0x2ca, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetTextOverlay_Top(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x2ca, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

long CVideoGrabberVC6::GetTextOverlay_Right()
{
	long result;
	InvokeHelper(0x2cb, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetTextOverlay_Right(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x2cb, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

BOOL CVideoGrabberVC6::GetTextOverlay_Shadow()
{
	BOOL result;
	InvokeHelper(0x2cc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetTextOverlay_Shadow(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x2cc, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

unsigned long CVideoGrabberVC6::GetTextOverlay_ShadowColor()
{
	unsigned long result;
	InvokeHelper(0x2cd, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetTextOverlay_ShadowColor(unsigned long newValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x2cd, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 newValue);
}

long CVideoGrabberVC6::GetTextOverlay_ShadowDirection()
{
	long result;
	InvokeHelper(0x2ce, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetTextOverlay_ShadowDirection(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x2ce, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

unsigned long CVideoGrabberVC6::GetTextOverlay_BkColor()
{
	unsigned long result;
	InvokeHelper(0x2cf, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetTextOverlay_BkColor(unsigned long newValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x2cf, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 newValue);
}

long CVideoGrabberVC6::GetTextOverlay_Align()
{
	long result;
	InvokeHelper(0x2d0, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetTextOverlay_Align(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x2d0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

unsigned long CVideoGrabberVC6::GetTextOverlay_FontColor()
{
	unsigned long result;
	InvokeHelper(0x2d1, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetTextOverlay_FontColor(unsigned long newValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x2d1, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 newValue);
}

CString CVideoGrabberVC6::GetTextOverlay_String()
{
	CString result;
	InvokeHelper(0x2d2, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetTextOverlay_String(LPCTSTR lpszNewValue)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x2d2, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 lpszNewValue);
}

BOOL CVideoGrabberVC6::GetTextOverlay_Transparent()
{
	BOOL result;
	InvokeHelper(0x2d3, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetTextOverlay_Transparent(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x2d3, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CVideoGrabberVC6::GetTranslateMouseCoordinates()
{
	BOOL result;
	InvokeHelper(0x2d4, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetTranslateMouseCoordinates(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x2d4, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CVideoGrabberVC6::GetTVUseFrequencyOverrides()
{
	BOOL result;
	InvokeHelper(0x2d5, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetTVUseFrequencyOverrides(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x2d5, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CVideoGrabberVC6::GetUseClock()
{
	BOOL result;
	InvokeHelper(0x2d6, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetUseClock(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x2d6, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

CString CVideoGrabberVC6::GetVersion()
{
	CString result;
	InvokeHelper(0x2d7, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetVersion(LPCTSTR lpszNewValue)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x2d7, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 lpszNewValue);
}

long CVideoGrabberVC6::GetVideoDevice()
{
	long result;
	InvokeHelper(0x2d8, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetVideoDevice(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x2d8, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

long CVideoGrabberVC6::GetVideoCompression_KeyFrameRate()
{
	long result;
	InvokeHelper(0x2d9, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetVideoCompression_KeyFrameRate(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x2d9, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

long CVideoGrabberVC6::GetVideoCompression_PFramesPerKeyFrame()
{
	long result;
	InvokeHelper(0x2da, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetVideoCompression_PFramesPerKeyFrame(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x2da, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

double CVideoGrabberVC6::GetVideoCompression_Quality()
{
	double result;
	InvokeHelper(0x2db, DISPATCH_PROPERTYGET, VT_R8, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetVideoCompression_Quality(double newValue)
{
	static BYTE parms[] =
		VTS_R8;
	InvokeHelper(0x2db, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 newValue);
}

long CVideoGrabberVC6::GetVideoCompression_WindowSize()
{
	long result;
	InvokeHelper(0x2dc, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetVideoCompression_WindowSize(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x2dc, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

BOOL CVideoGrabberVC6::GetVideoControlSettings()
{
	BOOL result;
	InvokeHelper(0x2dd, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetVideoControlSettings(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x2dd, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

long CVideoGrabberVC6::GetVideoFromImages_BitmapsSortedBy()
{
	long result;
	InvokeHelper(0x2de, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetVideoFromImages_BitmapsSortedBy(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x2de, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

BOOL CVideoGrabberVC6::GetVideoFromImages_RepeatIndefinitely()
{
	BOOL result;
	InvokeHelper(0x2df, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetVideoFromImages_RepeatIndefinitely(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x2df, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

CString CVideoGrabberVC6::GetVideoFromImages_SourceDirectory()
{
	CString result;
	InvokeHelper(0x2e0, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetVideoFromImages_SourceDirectory(LPCTSTR lpszNewValue)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x2e0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 lpszNewValue);
}

CString CVideoGrabberVC6::GetVideoFromImages_TemporaryFile()
{
	CString result;
	InvokeHelper(0x2e1, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetVideoFromImages_TemporaryFile(LPCTSTR lpszNewValue)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x2e1, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 lpszNewValue);
}

long CVideoGrabberVC6::GetVideoProcessing_Brightness()
{
	long result;
	InvokeHelper(0x2e2, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetVideoProcessing_Brightness(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x2e2, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

long CVideoGrabberVC6::GetVideoProcessing_Contrast()
{
	long result;
	InvokeHelper(0x2e3, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetVideoProcessing_Contrast(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x2e3, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

long CVideoGrabberVC6::GetVideoProcessing_Deinterlacing()
{
	long result;
	InvokeHelper(0x2e4, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetVideoProcessing_Deinterlacing(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x2e4, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

BOOL CVideoGrabberVC6::GetVideoProcessing_FlipHorizontal()
{
	BOOL result;
	InvokeHelper(0x2e5, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetVideoProcessing_FlipHorizontal(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x2e5, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CVideoGrabberVC6::GetVideoProcessing_FlipVertical()
{
	BOOL result;
	InvokeHelper(0x2e6, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetVideoProcessing_FlipVertical(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x2e6, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CVideoGrabberVC6::GetVideoProcessing_GrayScale()
{
	BOOL result;
	InvokeHelper(0x2e7, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetVideoProcessing_GrayScale(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x2e7, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

long CVideoGrabberVC6::GetVideoProcessing_Hue()
{
	long result;
	InvokeHelper(0x2e8, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetVideoProcessing_Hue(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x2e8, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

BOOL CVideoGrabberVC6::GetVideoProcessing_InvertColors()
{
	BOOL result;
	InvokeHelper(0x2e9, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetVideoProcessing_InvertColors(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x2e9, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

long CVideoGrabberVC6::GetVideoProcessing_Pixellization()
{
	long result;
	InvokeHelper(0x2ea, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetVideoProcessing_Pixellization(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x2ea, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

long CVideoGrabberVC6::GetVideoProcessing_Saturation()
{
	long result;
	InvokeHelper(0x2eb, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetVideoProcessing_Saturation(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x2eb, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

long CVideoGrabberVC6::GetVideoProcessing_Rotation()
{
	long result;
	InvokeHelper(0x2ec, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetVideoProcessing_Rotation(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x2ec, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

BOOL CVideoGrabberVC6::GetVideoQualitySettings()
{
	BOOL result;
	InvokeHelper(0x2ed, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetVideoQualitySettings(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x2ed, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

long CVideoGrabberVC6::GetVideoRenderer()
{
	long result;
	InvokeHelper(0x2ee, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetVideoRenderer(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x2ee, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

long CVideoGrabberVC6::GetVideoRendererExternal()
{
	long result;
	InvokeHelper(0x2ef, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetVideoRendererExternal(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x2ef, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

long CVideoGrabberVC6::GetVideoSource()
{
	long result;
	InvokeHelper(0x2f0, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetVideoSource(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x2f0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

CString CVideoGrabberVC6::GetVideoSource_FileOrURL()
{
	CString result;
	InvokeHelper(0x2f1, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetVideoSource_FileOrURL(LPCTSTR lpszNewValue)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x2f1, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 lpszNewValue);
}

double CVideoGrabberVC6::GetVideoSource_FileOrURL_StartTime()
{
	double result;
	InvokeHelper(0x2f2, DISPATCH_PROPERTYGET, VT_R8, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetVideoSource_FileOrURL_StartTime(double newValue)
{
	static BYTE parms[] =
		VTS_R8;
	InvokeHelper(0x2f2, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 newValue);
}

double CVideoGrabberVC6::GetVideoSource_FileOrURL_StopTime()
{
	double result;
	InvokeHelper(0x2f3, DISPATCH_PROPERTYGET, VT_R8, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetVideoSource_FileOrURL_StopTime(double newValue)
{
	static BYTE parms[] =
		VTS_R8;
	InvokeHelper(0x2f3, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 newValue);
}

BOOL CVideoGrabberVC6::GetVideoVisibleWhenStopped()
{
	BOOL result;
	InvokeHelper(0x2f4, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetVideoVisibleWhenStopped(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x2f4, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

long CVideoGrabberVC6::GetZoomCoeff()
{
	long result;
	InvokeHelper(0x2f5, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetZoomCoeff(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x2f5, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

long CVideoGrabberVC6::GetZoomXCenter()
{
	long result;
	InvokeHelper(0x2f6, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetZoomXCenter(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x2f6, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

long CVideoGrabberVC6::GetZoomYCenter()
{
	long result;
	InvokeHelper(0x2f7, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetZoomYCenter(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x2f7, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

long CVideoGrabberVC6::DrawTextBiDiModeFlagsReadingOnly()
{
	long result;
	InvokeHelper(0x2fc, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::InitiateAction()
{
	InvokeHelper(0x2fd, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

BOOL CVideoGrabberVC6::IsRightToLeft()
{
	BOOL result;
	InvokeHelper(0x2fe, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

BOOL CVideoGrabberVC6::UseRightToLeftReading()
{
	BOOL result;
	InvokeHelper(0x2ff, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

BOOL CVideoGrabberVC6::UseRightToLeftScrollBar()
{
	BOOL result;
	InvokeHelper(0x300, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CVideoGrabberVC6::SetSubComponent(BOOL IsSubComponent)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x301, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 IsSubComponent);
}

void CVideoGrabberVC6::AboutBox()
{
	InvokeHelper(0xfffffdd8, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}
