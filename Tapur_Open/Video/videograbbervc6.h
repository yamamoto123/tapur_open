#if !defined(AFX_VIDEOGRABBERVC6_H__FA92BC54_0F81_441D_8E0C_B5FADFF5322C__INCLUDED_)
#define AFX_VIDEOGRABBERVC6_H__FA92BC54_0F81_441D_8E0C_B5FADFF5322C__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000
// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.

/////////////////////////////////////////////////////////////////////////////
// CVideoGrabberVC6 wrapper class

class CVideoGrabberVC6 : public CWnd
{
protected:
	DECLARE_DYNCREATE(CVideoGrabberVC6)
public:
	CLSID const& GetClsid()
	{
		static CLSID const clsid
			= { 0x17066eff, 0x35d3, 0x402e, { 0xaf, 0x85, 0x83, 0xa8, 0x73, 0xe, 0x58, 0xbb } };
		return clsid;
	}
	virtual BOOL Create(LPCTSTR lpszClassName,
		LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect,
		CWnd* pParentWnd, UINT nID,
		CCreateContext* pContext = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID); }

    BOOL Create(LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect, CWnd* pParentWnd, UINT nID,
		CFile* pPersist = NULL, BOOL bStorage = FALSE,
		BSTR bstrLicKey = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID,
		pPersist, bStorage, bstrLicKey); }

// Attributes
public:

// Operations
public:
	long GetBusyCursor();
	void SetBusyCursor(long Value);
	long GetVideoCursor();
	void SetVideoCursor(long Value);
	long GetNormalCursor();
	void SetNormalCursor(long Value);
	long GetAnalogVideoStandard();
	CString GetAnalogVideoStandards();
	long GetAnalogVideoStandardsCount();
	long GetBufferCount();
	CString GetASFProfiles();
	long GetASFProfilesCount();
	long GetAudioBalance();
	long GetAudioCompressor();
	CString GetAudioCompressorName();
	long GetAudioInputBalance();
	long GetAudioInputLevel();
	BOOL GetAudioInputMono();
	long GetAudioInput();
	CString GetAudioInputs();
	long GetAudioInputsCount();
	CString GetAudioDeviceName();
	CString GetAudioFormats();
	CString GetAudioRendererName();
	long GetAudioVolume();
	BOOL GetBusy();
	long GetCropping_YMax();
	long GetCropping_XMax();
	double GetCurrentFrameRate();
	long GetCurrentState();
	double GetDeliveredFrames();
	long GetDisplay_VideoHeight();
	long GetDisplay_VideoWidth();
	long GetDroppedFrameCount();
	long GetDisplay_VideoWindowHandle();
	long GetDualDisplay_VideoWindowHandle();
	CString GetAudioCompressors();
	long GetAudioCompressorsCount();
	CString GetAudioDevices();
	long GetAudioDevicesCount();
	CString GetAudioRenderers();
	long GetAudioRenderersCount();
	CString GetVideoCompressors();
	long GetVideoCompressorsCount();
	CString GetVideoDevices();
	CString GetVideoDevicesId();
	long GetVideoDevicesCount();
	long GetDualDisplay_VideoHeight();
	long GetDualDisplay_VideoWidth();
	long GetFrameGrabberCurrentRGBFormat();
	CString GetGlobal_AudioCompressors();
	long GetGlobal_AudioCompressorsCount();
	CString GetGlobal_AudioDevices();
	long GetGlobal_AudioDevicesCount();
	CString GetGlobal_AudioRenderers();
	long GetGlobal_AudioRenderersCount();
	CString GetGlobal_VideoCompressors();
	long GetGlobal_VideoCompressorsCount();
	CString GetGlobal_VideoDevices();
	CString GetGlobal_VideoDevicesId();
	long GetGlobal_VideoDevicesCount();
	BOOL GetHoldRecording();
	double GetImageRatio();
	BOOL GetInFrameProgressEvent();
	BOOL GetIsAnalogVideoDecoderAvailable();
	BOOL GetIsAudioCrossbarAvailable();
	BOOL GetIsAudioDeviceASoundCard();
	long GetIsAudioInputBalanceAvailable();
	BOOL GetIsCameraControlAvailable();
	BOOL GetIsDigitalVideoIn();
	BOOL GetIsDVCommandAvailable();
	BOOL GetIsHorizontalSyncLocked();
	BOOL GetIsMpegStream();
	long GetIsPlayerAudioStreamAvailable();
	BOOL GetIsPlayerPaused();
	BOOL GetIsPlayerPlaying();
	BOOL GetIsRecordingPaused();
	BOOL GetTimeCodeReaderAvailable();
	BOOL GetIsTVAudioAvailable();
	BOOL GetIsTVAutoTuneRunning();
	BOOL GetIsTVTunerAvailable();
	BOOL GetIsVideoControlAvailable();
	BOOL GetIsVideoCrossbarAvailable();
	BOOL GetIsVideoQualityAvailable();
	BOOL GetIsVideoPortAvailable();
	BOOL GetIsVideoInterlaced();
	BOOL GetIsWDMVideoDriver();
	CString GetLast_BurstFrameCapture_FileName();
	CString GetLast_CaptureFrameTo_FileName();
	CString GetLast_Recording_FileName();
	CString GetLast_Clip_Played();
	double GetMotionDetector_GlobalMotionRatio();
	long GetMotionDetector_GridXCount();
	long GetMotionDetector_GridYCount();
	BOOL GetMotionDetector_IsGridValid();
	long GetMpegStreamType();
	long GetParentWindow();
	double GetPlayerDuration();
	CString GetPlayerAudioCodec();
	double GetPlayerFrameCount();
	double GetPlayerFramePosition();
	double GetPlayerTimePosition();
	double GetPlayerFrameRate();
	CString GetPlayerVideoCodec();
	CString GetPropertyPageSaverGroup();
	long GetRecordingBacktimedFramesCount();
	BOOL GetRecordingCanPause();
	double GetRecordingDuration();
	CString GetRecordingFourCC();
	long GetRecordingHeight();
	long GetRecordingWidth();
	double GetReencodingStartTime();
	double GetReencodingStopTime();
	long GetSendToDV_DeviceIndex();
	long GetSpeakerBalance();
	long GetSpeakerVolume();
	CString GetStreamingURL();
	CString GetSystemTempPath();
	long GetTVChannel();
	long GetTVCountryCode();
	long GetTVTunerInputType();
	long GetTunerMode();
	long GetUniqueID();
	BOOL GetVCRHorizontalLocking();
	long GetVideoCompressor();
	CString GetVideoCompressorName();
	long GetVideoInput();
	CString GetVideoInputs();
	long GetVideoInputsCount();
	CString GetVideoDeviceName();
	long GetVideoSize();
	CString GetVideoSizes();
	long GetVideoSizesCount();
	long GetVideoHeight();
	long GetVideoWidth();
	CString GetVideoSources();
	long GetVideoSourcesCount();
	long GetVideoSubtype();
	CString GetVideoSubtypes();
	long GetVideoSubtypesCount();
	void SetAnalogVideoStandard(long Value);
	void SetAudioBalance(long Value);
	void SetAudioCompressor(long Value);
	void SetAudioInput(long Value);
	void SetAudioInputBalance(long Value);
	void SetAudioInputLevel(long Value);
	void SetAudioInputMono(BOOL Value);
	void SetAudioVolume(long Value);
	void SetBufferCount(long Value);
	void SetHoldRecording(BOOL Value);
	void SetMpegStreamType(long Value);
	void SetParentWindow(long Value);
	void SetPlayerDuration(double Value);
	void SetPlayerFramePosition(double Value);
	void SetPlayerTimePosition(double Value);
	void SetPropertyPageSaverGroup(LPCTSTR Value);
	void SetRecordingBacktimedFramesCount(long Value);
	void SetRecordingCanPause(BOOL Value);
	void SetReencodingStartTime(double Value);
	void SetReencodingStopTime(double Value);
	void SetSendToDV_DeviceIndex(long Value);
	void SetSpeakerBalance(long Value);
	void SetSpeakerVolume(long Value);
	void SetTVChannel(long Value);
	void SetTVCountryCode(long Value);
	void SetTVTunerInputType(long Value);
	void SetTunerMode(long Value);
	void SetVCRHorizontalLocking(BOOL Value);
	void SetVideoCompressor(long Value);
	void SetVideoInput(long Value);
	void SetVideoSize(long Value);
	void SetVideoSubtype(long Value);
	long GetTextOverlay_Font();
	void SetTextOverlay_Font(long Value);
	void About();
	long AnalogVideoStandardIndex(LPCTSTR param1);
	CString ASFStreaming_GetAuthorizationList();
	CString ASFStreaming_GetConnectedClients();
	long ASFStreaming_GetConnectedClientsCount();
	BOOL ASFStreaming_ResetAuthorizations();
	BOOL ASFStreaming_SetAuthorization(BOOL Allowed, LPCTSTR IP, LPCTSTR Mask);
	BOOL AssociateMultiplexedSlave(long InputNumber, long SlaveUniqueID);
	long AudioCompressorIndex(LPCTSTR param1);
	long AudioDeviceIndex(LPCTSTR param1);
	long AudioRendererIndex(LPCTSTR param1);
	long AudioInputIndex(LPCTSTR param1);
	CString AVIHeaderInfo(LPCTSTR AVIFile, long HeaderAttribute);
	long CameraControlValue(long Setting);
	BOOL CameraControlAuto(long Setting);
	long CameraControlDefault(long Setting);
	long CameraControlMin(long Setting);
	long CameraControlMax(long Setting);
	long CameraControlStep(long Setting);
	BOOL Cancel();
	BOOL CanProcessMessages();
	BOOL CaptureFrameTo(long Dest, LPCTSTR FileName);
	BOOL CaptureFrameSyncTo(long Dest, LPCTSTR FileName);
	void ClearHeaderAttributes();
	void ClosePlayer();
	BOOL CreatePreallocCapFile();
	BOOL CrossbarCanConnectInput(long Crossbar, long InputIndex, long OutputIndex);
	BOOL CrossbarConnectInput(long Crossbar, long InputIndex, long OutputIndex);
	BOOL CrossbarGetPInBounds(long Crossbar, long* InputCount, long* OutputCount);
	BOOL CrossbarGetPinInfo(long Crossbar, long PinDirection, long Index, long* IndexRelated, long* PhysicalType, BSTR* PhysicalTypestring);
	BOOL CrossbarGetInputConnected(long Crossbar, long OutputIndex, long* InputIndex);
	void Display_SetLocation(long WindowLeft, long WindowTop, long WindowWidth, long WindowHeight);
	void DestroyComponent();
	void DualDisplay_SetLocation(long WindowLeft, long WindowTop, long WindowWidth, long WindowHeight);
	BOOL DrawBitmapOverFrame(long BitmapHandle, long LeftLocation, long TopLocation, long bmWidth, long bmHeight, BOOL Transparent, BOOL UseTransparentColor, unsigned long TransparentColorValue, BOOL AlphaBlend, long AlphaBlendValue);
	BOOL EnumerateWindows();
	void FastForwardPlayer();
	long FindIndexInListByName(LPCTSTR List, LPCTSTR SearchedString, BOOL IsSubString, BOOL IgnoreCase);
	long GetFrameInfo(long FrameId, long FrameInfoId);
	long GetGPIO(long CustomID, long Index);
	CString GetLogString(long param1);
	long GetNearestVideoWidth(long PreferredVideoWidth, long PreferredVideoHeight);
	long GetNearestVideoHeight(long PreferredVideoWidth, long PreferredVideoHeight);
	CString GetPlaylist();
	long GetTVChannelInfo(long param1);
	long GetVideoWidthFromIndex(long VideoSizeIndex);
	long GetVideoHeightFromIndex(long VideoSizeIndex);
	void GetNearestVideoSize(long PreferredVideoWidth, long PreferredVideoHeight, long* NearestVideoWidth, long* NearestVideoHeight);
	BOOL GetVMR9ImageAdjustmentBounds(BOOL MainDisplay, long VMR9ControlSetting, long* MinValue, long* MaxValue, long* StepSize, long* DefaultValue, long* CurrentValue);
	BOOL GetVideoSizeFromIndex(long VideoSizeIndex, long* VideoWidth, long* VideoHeight);
	BOOL AVIDuration(LPCTSTR AVIFile, double* Duration, double* FrameCount);
	BOOL AVIInfo(LPCTSTR AVIFile, double* Duration, double* FrameCount, long* VideoWidth, long* VideoHeight, double* VideoFrameRateFps, long* AvgBitRate, long* AudioChannels, long* AudioSamplesPerSec, long* AudioBitsPerSample, BSTR* VideoCodec, 
		BSTR* AudioCodec);
	BOOL GetVideoCompressionSettings(long* DataRate, long* KeyFrameRate, long* PFramesPerKeyFrame, long* WindowSize, double* Quality, BOOL* CanQuality, BOOL* CanCrunch, BOOL* CanKeyFrame, BOOL* CanBFrame, BOOL* CanWindow);
	long GetRGBPixelAt(long x, long y);
	long GetVUMeterSetting(long ChannelIndex, long VUMeterSetting);
	long GraphState();
	BOOL IsCameraControlSettingAvailable(long Setting);
	BOOL IsDialogAvailable(long Dialog);
	BOOL IsPlaylistActive();
	BOOL IsVideoQualitySettingAvailable(long Setting);
	BOOL IsVideoControlModeAvailable(long Mode);
	BOOL IsVMR9ImageAdjustmentAvailable(BOOL MainDisplay);
	BOOL IsVideoSignalDetected(BOOL DetectConnexantBlueScreen, BOOL DetectCustomRGB, long CustomR, long CustomG, long CustomB, BOOL UseAsMaxValues);
	BOOL MixAudioSamples(long pSampleBuffer, long SampleBufferSize, long SampleDataLength, long SampleFormatType, long pFormat, double SampleStartTime, double SampleStopTime);
	double MotionDetector_CellMotionRatio(long x, long y);
	CString MotionDetector_Get2DTextGrid();
	CString MotionDetector_Get2DTextMotion();
	BOOL MotionDetector_GetCellLocation(long x, long y, long* XLocation, long* YLocation);
	BOOL MotionDetector_GetCellSensitivity(long x, long y, long* param3);
	BOOL MotionDetector_GetCellSize(long* XSize, long* YSize);
	BOOL MotionDetector_SetCellSensitivity(long x, long y, long param3);
	void MotionDetector_SetGridSize(long x, long y);
	void MotionDetector_GloballyIncOrDecSensitivity(long Value);
	void MotionDetector_ResetGlobalSensitivity(long Value);
	void MotionDetector_Reset();
	void MotionDetector_ShowGridDialog();
	void MotionDetector_TriggerNow();
	BOOL MotionDetector_UseThisReferenceSample(long Bitmap_, LPCTSTR BMPFile, LPCTSTR JPEGFile);
	BOOL OpenPlayer();
	BOOL OpenPlayerAtFramePositions(double StartFrame, double StopFrame, BOOL KeepBounds, BOOL CloseAndReopenIfAlreadyOpened);
	BOOL OpenPlayerAtTimePositions(double StartTime, double StopTime, BOOL KeepBounds, BOOL CloseAndReopenIfAlreadyOpened);
	BOOL PauseRecording();
	void PausePlayer();
	BOOL Playlist(long PlaylistAction, LPCTSTR VideoClip);
	BOOL ReencodeVideoClip(LPCTSTR SourceVideoClip, LPCTSTR NewVideoClip, BOOL IncludeVideoStream, BOOL IncludeAudioStream, BOOL UseFrameGrabber, BOOL UseCurrentVideoCompressor, BOOL UseCurrentAudioCompressor);
	BOOL ResumeRecording();
	void RewindPlayer();
	void RunPlayer();
	void RunPlayerBackwards();
	long VideoCompressorIndex(LPCTSTR param1);
	long VideoDeviceIndex(LPCTSTR param1);
	long VideoInputIndex(LPCTSTR param1);
	long VideoSizeIndex(LPCTSTR param1);
	long VideoSubtypeIndex(LPCTSTR param1);
	BOOL SendDVCommand(long DVCommand);
	BOOL SetCameraControl(long Setting, BOOL SetAuto, BOOL SetDefault, long SetValue);
	void SetColorKeys(unsigned long LowestRGBColorValue, unsigned long HighestRGBColorValue);
	void SetTextOverlayCustomVar(long VarIndex, LPCTSTR VarText);
	BOOL SetVideoCompressionDefaults();
	BOOL SetVideoCompressionSettings(long DataRate, long KeyFrameRate, long PFramesPerKeyFrame, long WindowSize, double Quality);
	BOOL SetVideoControlMode(BOOL FlipHorizontal, BOOL FlipVertical, BOOL ExternalTriggerEnable, BOOL Trigger);
	BOOL SetVideoQuality(long Setting, BOOL SetAuto, BOOL SetDefault, long SetValue);
	BOOL SetVMR9ImageAdjustmentValue(BOOL MainDisplay, long VMR9ControlSetting, long param3, BOOL FixRange);
	BOOL ShowDialog(long Dialog);
	BOOL PausePreview();
	BOOL ResetPreview();
	BOOL ResumePreview();
	BOOL RecordToNewFileNow();
	void RetrieveInitialXYAfterRotation(long x, long y, long* OriginalX, long* OriginalY);
	void SetImageOverlayAttributes(long LeftLocation, long TopLocation, long StretchedWidth, long StretchedHeight, BOOL Transparent, BOOL UseTransparentColor, long TransparentColorValue, BOOL AlphaBlend, long AlphaBlendValue);
	BOOL SetImageOverlayFromBMPFile(LPCTSTR FileName);
	BOOL SetImageOverlayFromJPEGFile(LPCTSTR FileName);
	BOOL SetImageOverlayFromHBitmap(long Bitmap);
	BOOL SetLogoFromBMPFile(LPCTSTR FileName);
	BOOL SetLogoFromJPEGFile(LPCTSTR FileName);
	void SetHeaderAttribute(long HeaderAttribute, LPCTSTR Value);
	BOOL SetLogoFromHBitmap(long Bitmap);
	BOOL ScreenRecordingUsingCoordinates(BOOL Enabled, long scLeft, long scTop, long scWidth, long scHeight);
	BOOL SendCameraCommand(long Pan, long Tilt, BOOL Relative);
	BOOL SetGPIO(long CustomID, long Index, long param3);
	BOOL SetWindowRecordingByHandle(long WindowHandle);
	BOOL SetWindowRecordingByName(LPCTSTR WindowName, BOOL ExactMatch);
	void SetVUMeterSetting(long ChannelIndex, long VUMeterSetting, long Value);
	BOOL StartAudioRecording();
	BOOL StartAudioRendering();
	BOOL StartPreview();
	BOOL StartRecording();
	BOOL StartReencoding();
	BOOL Stop();
	void StopPreview();
	void StopPlayer();
	void StopRecording();
	BOOL StopReencoding();
	long ThirdPartyFilter_AddToList(long Location, LPCTSTR GUIDString, LPCTSTR Name, BOOL Enable, BOOL CanSaveFilterState);
	BOOL ThirdPartyFilter_ClearList(long Location);
	BOOL ThirdPartyFilter_Enable(long Location, long Index, BOOL Enable);
	BOOL ThirdPartyFilter_RemoveFromList(long Location, long Index);
	BOOL ThirdPartyFilter_ShowDialog(long Location, long Index);
	BOOL TVGetMinMaxChannels(long* MinChannel, long* MaxChannel);
	BOOL TVClearFrequencyOverrides();
	long TVSetChannelFrequencyOverride(long TVChannel, long FrequencyInHz);
	BOOL TVStartAutoScan();
	BOOL TVStartAutoScanChannels(long MinChannel, long MaxChannel, long Interval_ms);
	BOOL TVStopAutoScan();
	void UseNearestVideoSize(long PreferredWidth, long PreferredHeight, BOOL Stretch);
	BOOL VDECGetHorizontalLocked(long* plLocked);
	BOOL VDECGetNumberOfLines(long* plNumberOfLines);
	BOOL VDECGetOutputEnable(long* plOutputEnable);
	BOOL VDECGetVCRHorizontalLocking(long* plVCRHorizontalLocking);
	BOOL VDECPutTVFormat(long lAnalogVideoStandard);
	BOOL VDECPutOutputEnable(long lOutputEnable);
	BOOL VDECPutVCRHorizontalLocking(long lVCRHorizontalLocking);
	BOOL VideoFromImages_CreateSetOfBitmaps();
	long VideoQualityValue(long Setting);
	BOOL VideoQualityAuto(long Setting);
	long VideoQualityDefault(long Setting);
	long VideoQualityMin(long Setting);
	long VideoQualityMax(long Setting);
	long VideoQualityStep(long Setting);
	BOOL GetGlobal_IsVideoDeviceConnected(long DeviceIndex);
	BOOL GetGlobal_IsAudioDeviceConnected(long DeviceIndex);
	BOOL GetGlobal_IsAudioRendererConnected(long RendererIndex);
	BOOL GetGlobal_IsDVDevice(long Index);
	BOOL GetGlobal_IsDirectX8OrHigherInstalled();
	long GetGlobal_MonitorsCount();
	long GetAlignment();
	void SetAlignment(long nNewValue);
	CString GetCaption();
	void SetCaption(LPCTSTR lpszNewValue);
	unsigned long GetColor();
	void SetColor(unsigned long newValue);
	BOOL GetEnabled();
	void SetEnabled(BOOL bNewValue);
	BOOL GetFullRepaint();
	void SetFullRepaint(BOOL bNewValue);
	BOOL GetParentColor();
	void SetParentColor(BOOL bNewValue);
	BOOL GetVisible();
	void SetVisible(BOOL bNewValue);
	long GetApplicationPriority();
	void SetApplicationPriority(long nNewValue);
	long GetASFAudioBitRate();
	void SetASFAudioBitRate(long nNewValue);
	long GetASFAudioChannels();
	void SetASFAudioChannels(long nNewValue);
	long GetASFDeinterlaceMode();
	void SetASFDeinterlaceMode(long nNewValue);
	BOOL GetASFFixedFrameRate();
	void SetASFFixedFrameRate(BOOL bNewValue);
	CString GetASFMediaServerPublishingPoint();
	void SetASFMediaServerPublishingPoint(LPCTSTR lpszNewValue);
	long GetASFNetworkPort();
	void SetASFNetworkPort(long nNewValue);
	long GetASFNetworkMaxUsers();
	void SetASFNetworkMaxUsers(long nNewValue);
	long GetASFProfile();
	void SetASFProfile(long nNewValue);
	CString GetASFProfileFromCustomFile();
	void SetASFProfileFromCustomFile(LPCTSTR lpszNewValue);
	long GetASFVideoBitRate();
	void SetASFVideoBitRate(long nNewValue);
	long GetASFVideoHeight();
	void SetASFVideoHeight(long nNewValue);
	long GetASFVideoMaxKeyFrameSpacing();
	void SetASFVideoMaxKeyFrameSpacing(long nNewValue);
	long GetASFVideoQuality();
	void SetASFVideoQuality(long nNewValue);
	long GetASFVideoWidth();
	void SetASFVideoWidth(long nNewValue);
	long GetNetworkStreaming();
	void SetNetworkStreaming(long nNewValue);
	long GetNetworkStreamingType();
	void SetNetworkStreamingType(long nNewValue);
	BOOL GetAssociateAudioAndVideoDevices();
	void SetAssociateAudioAndVideoDevices(BOOL bNewValue);
	BOOL GetAVIDurationUpdated();
	void SetAVIDurationUpdated(BOOL bNewValue);
	long GetAudioDevice();
	void SetAudioDevice(long nNewValue);
	long GetAudioFormat();
	void SetAudioFormat(long nNewValue);
	BOOL GetAudioDeviceRendering();
	void SetAudioDeviceRendering(BOOL bNewValue);
	BOOL GetAudioPeakEvent();
	void SetAudioPeakEvent(BOOL bNewValue);
	BOOL GetAudioRecording();
	void SetAudioRecording(BOOL bNewValue);
	long GetAudioRenderer();
	void SetAudioRenderer(long nNewValue);
	long GetAudioSource();
	void SetAudioSource(long nNewValue);
	long GetVuMeter();
	void SetVuMeter(long nNewValue);
	BOOL GetAutoConnectRelatedPins();
	void SetAutoConnectRelatedPins(BOOL bNewValue);
	long GetAutoFileName();
	void SetAutoFileName(long nNewValue);
	long GetAutoFileNameMinDigits();
	void SetAutoFileNameMinDigits(long nNewValue);
	CString GetAutoFilePrefix();
	void SetAutoFilePrefix(LPCTSTR lpszNewValue);
	BOOL GetAutoRefreshPreview();
	void SetAutoRefreshPreview(BOOL bNewValue);
	BOOL GetAutoStartPlayer();
	void SetAutoStartPlayer(BOOL bNewValue);
	BOOL GetAVIFormatOpenDML();
	void SetAVIFormatOpenDML(BOOL bNewValue);
	unsigned long GetBackgroundColor();
	void SetBackgroundColor(unsigned long newValue);
	long GetBorderStyle();
	void SetBorderStyle(long nNewValue);
	long GetBurstCount();
	void SetBurstCount(long nNewValue);
	long GetBurstInterval();
	void SetBurstInterval(long nNewValue);
	BOOL GetBurstMode();
	void SetBurstMode(BOOL bNewValue);
	long GetBurstType();
	void SetBurstType(long nNewValue);
	BOOL GetCameraControlSettings();
	void SetCameraControlSettings(BOOL bNewValue);
	CString GetCaptureFileExt();
	void SetCaptureFileExt(LPCTSTR lpszNewValue);
	BOOL GetColorKeyEnabled();
	void SetColorKeyEnabled(BOOL bNewValue);
	long GetCompressionMode();
	void SetCompressionMode(long nNewValue);
	long GetCompressionType();
	void SetCompressionType(long nNewValue);
	BOOL GetDisplay_Active();
	void SetDisplay_Active(BOOL bNewValue);
	BOOL GetDisplay_AutoSize();
	void SetDisplay_AutoSize(BOOL bNewValue);
	long GetDisplay_AspectRatio();
	void SetDisplay_AspectRatio(long nNewValue);
	BOOL GetDisplay_Embedded();
	void SetDisplay_Embedded(BOOL bNewValue);
	BOOL GetDisplay_FullScreen();
	void SetDisplay_FullScreen(BOOL bNewValue);
	long GetDisplay_Height();
	void SetDisplay_Height(long nNewValue);
	long GetDisplay_Left();
	void SetDisplay_Left(long nNewValue);
	BOOL GetDisplay_StayOnTop();
	void SetDisplay_StayOnTop(BOOL bNewValue);
	long GetDisplay_Monitor();
	void SetDisplay_Monitor(long nNewValue);
	BOOL GetDisplay_MouseMovesWindow();
	void SetDisplay_MouseMovesWindow(BOOL bNewValue);
	long GetDisplay_Top();
	void SetDisplay_Top(long nNewValue);
	BOOL GetDisplay_VideoPortEnabled();
	void SetDisplay_VideoPortEnabled(BOOL bNewValue);
	long GetDisplay_Width();
	void SetDisplay_Width(long nNewValue);
	long GetDroppedFramesPollingInterval();
	void SetDroppedFramesPollingInterval(long nNewValue);
	BOOL GetDualDisplay_Active();
	void SetDualDisplay_Active(BOOL bNewValue);
	BOOL GetDualDisplay_AutoSize();
	void SetDualDisplay_AutoSize(BOOL bNewValue);
	long GetDualDisplay_AspectRatio();
	void SetDualDisplay_AspectRatio(long nNewValue);
	BOOL GetDualDisplay_Embedded();
	void SetDualDisplay_Embedded(BOOL bNewValue);
	BOOL GetDualDisplay_FullScreen();
	void SetDualDisplay_FullScreen(BOOL bNewValue);
	long GetDualDisplay_Height();
	void SetDualDisplay_Height(long nNewValue);
	long GetDualDisplay_Left();
	void SetDualDisplay_Left(long nNewValue);
	BOOL GetDualDisplay_StayOnTop();
	void SetDualDisplay_StayOnTop(BOOL bNewValue);
	long GetDualDisplay_Monitor();
	void SetDualDisplay_Monitor(long nNewValue);
	BOOL GetDualDisplay_MouseMovesWindow();
	void SetDualDisplay_MouseMovesWindow(BOOL bNewValue);
	long GetDualDisplay_Top();
	void SetDualDisplay_Top(long nNewValue);
	BOOL GetDualDisplay_VideoPortEnabled();
	void SetDualDisplay_VideoPortEnabled(BOOL bNewValue);
	long GetDualDisplay_Width();
	void SetDualDisplay_Width(long nNewValue);
	long GetDVDiscontinuityMinimumInterval();
	void SetDVDiscontinuityMinimumInterval(long nNewValue);
	long GetDVEncoder_VideoFormat();
	void SetDVEncoder_VideoFormat(long nNewValue);
	long GetDVEncoder_VideoResolution();
	void SetDVEncoder_VideoResolution(long nNewValue);
	long GetDVEncoder_VideoStandard();
	void SetDVEncoder_VideoStandard(long nNewValue);
	BOOL GetDVRgb219();
	void SetDVRgb219(BOOL bNewValue);
	BOOL GetDVReduceFrameRate();
	void SetDVReduceFrameRate(BOOL bNewValue);
	BOOL GetDVRecordingInNativeFormatSeparatesStreams();
	void SetDVRecordingInNativeFormatSeparatesStreams(BOOL bNewValue);
	BOOL GetEventNotificationSynchrone();
	void SetEventNotificationSynchrone(BOOL bNewValue);
	BOOL GetCropping_Enabled();
	void SetCropping_Enabled(BOOL bNewValue);
	long GetCropping_Height();
	void SetCropping_Height(long nNewValue);
	BOOL GetCropping_Outbounds();
	void SetCropping_Outbounds(BOOL bNewValue);
	long GetCropping_Width();
	void SetCropping_Width(long nNewValue);
	long GetCropping_X();
	void SetCropping_X(long nNewValue);
	long GetCropping_Y();
	void SetCropping_Y(long nNewValue);
	double GetCropping_Zoom();
	void SetCropping_Zoom(double newValue);
	BOOL GetFixFlickerOrBlackCapture();
	void SetFixFlickerOrBlackCapture(BOOL bNewValue);
	BOOL GetFrameCaptureWithoutOverlay();
	void SetFrameCaptureWithoutOverlay(BOOL bNewValue);
	long GetFrameCaptureHeight();
	void SetFrameCaptureHeight(long nNewValue);
	long GetFrameCaptureWidth();
	void SetFrameCaptureWidth(long nNewValue);
	long GetFrameCaptureZoomSize();
	void SetFrameCaptureZoomSize(long nNewValue);
	long GetFrameGrabber();
	void SetFrameGrabber(long nNewValue);
	long GetFrameGrabberRGBFormat();
	void SetFrameGrabberRGBFormat(long nNewValue);
	double GetFrameRate();
	void SetFrameRate(double newValue);
	CString GetLicenseString();
	void SetLicenseString(LPCTSTR lpszNewValue);
	long GetJPEGPerformance();
	void SetJPEGPerformance(long nNewValue);
	BOOL GetJPEGProgressiveDisplay();
	void SetJPEGProgressiveDisplay(BOOL bNewValue);
	short GetJPEGQuality();
	void SetJPEGQuality(short nNewValue);
	BOOL GetImageOverlayEnabled();
	void SetImageOverlayEnabled(BOOL bNewValue);
	BOOL GetLogoDisplayed();
	void SetLogoDisplayed(BOOL bNewValue);
	long GetLogoLayout();
	void SetLogoLayout(long nNewValue);
	long GetMixAudioSamples_CurrentSourceLevel();
	void SetMixAudioSamples_CurrentSourceLevel(long nNewValue);
	long GetMixAudioSamples_ExternalSourceLevel();
	void SetMixAudioSamples_ExternalSourceLevel(long nNewValue);
	BOOL GetMotionDetector_CompareBlue();
	void SetMotionDetector_CompareBlue(BOOL bNewValue);
	BOOL GetMotionDetector_CompareGreen();
	void SetMotionDetector_CompareGreen(BOOL bNewValue);
	BOOL GetMotionDetector_GreyScale();
	void SetMotionDetector_GreyScale(BOOL bNewValue);
	BOOL GetMotionDetector_CompareRed();
	void SetMotionDetector_CompareRed(BOOL bNewValue);
	BOOL GetMotionDetector_Enabled();
	void SetMotionDetector_Enabled(BOOL bNewValue);
	CString GetMotionDetector_Grid();
	void SetMotionDetector_Grid(LPCTSTR lpszNewValue);
	double GetMotionDetector_MaxDetectionsPerSecond();
	void SetMotionDetector_MaxDetectionsPerSecond(double newValue);
	long GetMotionDetector_ReduceCPULoad();
	void SetMotionDetector_ReduceCPULoad(long nNewValue);
	BOOL GetMotionDetector_ReduceVideoNoise();
	void SetMotionDetector_ReduceVideoNoise(BOOL bNewValue);
	BOOL GetMotionDetector_Triggered();
	void SetMotionDetector_Triggered(BOOL bNewValue);
	BOOL GetMultiplexedInputEmulation();
	void SetMultiplexedInputEmulation(BOOL bNewValue);
	long GetMultiplexedRole();
	void SetMultiplexedRole(long nNewValue);
	long GetMultiplexedSwitchDelay();
	void SetMultiplexedSwitchDelay(long nNewValue);
	long GetMultiplexedStabilizationDelay();
	void SetMultiplexedStabilizationDelay(long nNewValue);
	BOOL GetMuteAudioRendering();
	void SetMuteAudioRendering(BOOL bNewValue);
	long GetNotificationMethod();
	void SetNotificationMethod(long nNewValue);
	long GetNotificationSleepTime();
	void SetNotificationSleepTime(long nNewValue);
	long GetNotificationPriority();
	void SetNotificationPriority(long nNewValue);
	BOOL GetOverlayAfterTransform();
	void SetOverlayAfterTransform(BOOL bNewValue);
	BOOL GetPlayerAudioRendering();
	void SetPlayerAudioRendering(BOOL bNewValue);
	long GetPlayerDVSize();
	void SetPlayerDVSize(long nNewValue);
	long GetPlayerFastSeekSpeedRatio();
	void SetPlayerFastSeekSpeedRatio(long nNewValue);
	CString GetPlayerFileName();
	void SetPlayerFileName(LPCTSTR lpszNewValue);
	CString GetPlayerForcedCodec();
	void SetPlayerForcedCodec(LPCTSTR lpszNewValue);
	BOOL GetPlayerRefreshPausedDisplay();
	void SetPlayerRefreshPausedDisplay(BOOL bNewValue);
	double GetPlayerRefreshPausedDisplayFrameRate();
	void SetPlayerRefreshPausedDisplayFrameRate(double newValue);
	double GetPlayerSpeedRatio();
	void SetPlayerSpeedRatio(double newValue);
	BOOL GetPreallocCapFileCopiedAfterRecording();
	void SetPreallocCapFileCopiedAfterRecording(BOOL bNewValue);
	BOOL GetPreallocCapFileEnabled();
	void SetPreallocCapFileEnabled(BOOL bNewValue);
	CString GetPreallocCapFileName();
	void SetPreallocCapFileName(LPCTSTR lpszNewValue);
	long GetPreallocCapFileSizeInMB();
	void SetPreallocCapFileSizeInMB(long nNewValue);
	long GetPreviewZoomSize();
	void SetPreviewZoomSize(long nNewValue);
	CString GetRecordingFileName();
	void SetRecordingFileName(LPCTSTR lpszNewValue);
	BOOL GetRecordingInNativeFormat();
	void SetRecordingInNativeFormat(BOOL bNewValue);
	long GetRecordingMethod();
	void SetRecordingMethod(long nNewValue);
	BOOL GetRecordingPauseCreatesNewFile();
	void SetRecordingPauseCreatesNewFile(BOOL bNewValue);
	BOOL GetRecordingOnMotion_Enabled();
	void SetRecordingOnMotion_Enabled(BOOL bNewValue);
	double GetRecordingOnMotion_MotionThreshold();
	void SetRecordingOnMotion_MotionThreshold(double newValue);
	long GetRecordingOnMotion_NoMotionPauseDelayMs();
	void SetRecordingOnMotion_NoMotionPauseDelayMs(long nNewValue);
	CString GetReencoding_NewVideoClip();
	void SetReencoding_NewVideoClip(LPCTSTR lpszNewValue);
	CString GetReencoding_SourceVideoClip();
	void SetReencoding_SourceVideoClip(LPCTSTR lpszNewValue);
	double GetReencoding_StartTime();
	void SetReencoding_StartTime(double newValue);
	double GetReencoding_StopTime();
	void SetReencoding_StopTime(double newValue);
	BOOL GetReencoding_IncludeAudioStream();
	void SetReencoding_IncludeAudioStream(BOOL bNewValue);
	BOOL GetReencoding_IncludeVideoStream();
	void SetReencoding_IncludeVideoStream(BOOL bNewValue);
	long GetReencoding_Method();
	void SetReencoding_Method(long nNewValue);
	BOOL GetReencoding_UseAudioCompressor();
	void SetReencoding_UseAudioCompressor(BOOL bNewValue);
	BOOL GetReencoding_UseFrameGrabber();
	void SetReencoding_UseFrameGrabber(BOOL bNewValue);
	BOOL GetReencoding_UseVideoCompressor();
	void SetReencoding_UseVideoCompressor(BOOL bNewValue);
	BOOL GetReencoding_WMVOutput();
	void SetReencoding_WMVOutput(BOOL bNewValue);
	long GetRawSampleCaptureLocation();
	void SetRawSampleCaptureLocation(long nNewValue);
	BOOL GetRawVideoSampleCapture();
	void SetRawVideoSampleCapture(BOOL bNewValue);
	BOOL GetRawAudioSampleCapture();
	void SetRawAudioSampleCapture(BOOL bNewValue);
	BOOL GetRawCaptureAsyncEvent();
	void SetRawCaptureAsyncEvent(BOOL bNewValue);
	long GetRecordingSize();
	void SetRecordingSize(long nNewValue);
	BOOL GetScreenRecordingThroughClipboard();
	void SetScreenRecordingThroughClipboard(BOOL bNewValue);
	BOOL GetScreenRecordingWithCursor();
	void SetScreenRecordingWithCursor(BOOL bNewValue);
	BOOL GetShapeOverlayEnabled();
	void SetShapeOverlayEnabled(BOOL bNewValue);
	BOOL GetSpeakerControl();
	void SetSpeakerControl(BOOL bNewValue);
	CString GetStoragePath();
	void SetStoragePath(LPCTSTR lpszNewValue);
	BOOL GetStoreDeviceSettingsInRegistry();
	void SetStoreDeviceSettingsInRegistry(BOOL bNewValue);
	BOOL GetSynchronized();
	void SetSynchronized(BOOL bNewValue);
	BOOL GetSyncCommands();
	void SetSyncCommands(BOOL bNewValue);
	long GetSyncPreview();
	void SetSyncPreview(long nNewValue);
	BOOL GetTextOverlay_Enabled();
	void SetTextOverlay_Enabled(BOOL bNewValue);
	long GetTextOverlay_Left();
	void SetTextOverlay_Left(long nNewValue);
	long GetTextOverlay_Top();
	void SetTextOverlay_Top(long nNewValue);
	long GetTextOverlay_Right();
	void SetTextOverlay_Right(long nNewValue);
	BOOL GetTextOverlay_Shadow();
	void SetTextOverlay_Shadow(BOOL bNewValue);
	unsigned long GetTextOverlay_ShadowColor();
	void SetTextOverlay_ShadowColor(unsigned long newValue);
	long GetTextOverlay_ShadowDirection();
	void SetTextOverlay_ShadowDirection(long nNewValue);
	unsigned long GetTextOverlay_BkColor();
	void SetTextOverlay_BkColor(unsigned long newValue);
	long GetTextOverlay_Align();
	void SetTextOverlay_Align(long nNewValue);
	unsigned long GetTextOverlay_FontColor();
	void SetTextOverlay_FontColor(unsigned long newValue);
	CString GetTextOverlay_String();
	void SetTextOverlay_String(LPCTSTR lpszNewValue);
	BOOL GetTextOverlay_Transparent();
	void SetTextOverlay_Transparent(BOOL bNewValue);
	BOOL GetTranslateMouseCoordinates();
	void SetTranslateMouseCoordinates(BOOL bNewValue);
	BOOL GetTVUseFrequencyOverrides();
	void SetTVUseFrequencyOverrides(BOOL bNewValue);
	BOOL GetUseClock();
	void SetUseClock(BOOL bNewValue);
	CString GetVersion();
	void SetVersion(LPCTSTR lpszNewValue);
	long GetVideoDevice();
	void SetVideoDevice(long nNewValue);
	long GetVideoCompression_KeyFrameRate();
	void SetVideoCompression_KeyFrameRate(long nNewValue);
	long GetVideoCompression_PFramesPerKeyFrame();
	void SetVideoCompression_PFramesPerKeyFrame(long nNewValue);
	double GetVideoCompression_Quality();
	void SetVideoCompression_Quality(double newValue);
	long GetVideoCompression_WindowSize();
	void SetVideoCompression_WindowSize(long nNewValue);
	BOOL GetVideoControlSettings();
	void SetVideoControlSettings(BOOL bNewValue);
	long GetVideoFromImages_BitmapsSortedBy();
	void SetVideoFromImages_BitmapsSortedBy(long nNewValue);
	BOOL GetVideoFromImages_RepeatIndefinitely();
	void SetVideoFromImages_RepeatIndefinitely(BOOL bNewValue);
	CString GetVideoFromImages_SourceDirectory();
	void SetVideoFromImages_SourceDirectory(LPCTSTR lpszNewValue);
	CString GetVideoFromImages_TemporaryFile();
	void SetVideoFromImages_TemporaryFile(LPCTSTR lpszNewValue);
	long GetVideoProcessing_Brightness();
	void SetVideoProcessing_Brightness(long nNewValue);
	long GetVideoProcessing_Contrast();
	void SetVideoProcessing_Contrast(long nNewValue);
	long GetVideoProcessing_Deinterlacing();
	void SetVideoProcessing_Deinterlacing(long nNewValue);
	BOOL GetVideoProcessing_FlipHorizontal();
	void SetVideoProcessing_FlipHorizontal(BOOL bNewValue);
	BOOL GetVideoProcessing_FlipVertical();
	void SetVideoProcessing_FlipVertical(BOOL bNewValue);
	BOOL GetVideoProcessing_GrayScale();
	void SetVideoProcessing_GrayScale(BOOL bNewValue);
	long GetVideoProcessing_Hue();
	void SetVideoProcessing_Hue(long nNewValue);
	BOOL GetVideoProcessing_InvertColors();
	void SetVideoProcessing_InvertColors(BOOL bNewValue);
	long GetVideoProcessing_Pixellization();
	void SetVideoProcessing_Pixellization(long nNewValue);
	long GetVideoProcessing_Saturation();
	void SetVideoProcessing_Saturation(long nNewValue);
	long GetVideoProcessing_Rotation();
	void SetVideoProcessing_Rotation(long nNewValue);
	BOOL GetVideoQualitySettings();
	void SetVideoQualitySettings(BOOL bNewValue);
	long GetVideoRenderer();
	void SetVideoRenderer(long nNewValue);
	long GetVideoRendererExternal();
	void SetVideoRendererExternal(long nNewValue);
	long GetVideoSource();
	void SetVideoSource(long nNewValue);
	CString GetVideoSource_FileOrURL();
	void SetVideoSource_FileOrURL(LPCTSTR lpszNewValue);
	double GetVideoSource_FileOrURL_StartTime();
	void SetVideoSource_FileOrURL_StartTime(double newValue);
	double GetVideoSource_FileOrURL_StopTime();
	void SetVideoSource_FileOrURL_StopTime(double newValue);
	BOOL GetVideoVisibleWhenStopped();
	void SetVideoVisibleWhenStopped(BOOL bNewValue);
	long GetZoomCoeff();
	void SetZoomCoeff(long nNewValue);
	long GetZoomXCenter();
	void SetZoomXCenter(long nNewValue);
	long GetZoomYCenter();
	void SetZoomYCenter(long nNewValue);
	long DrawTextBiDiModeFlagsReadingOnly();
	void InitiateAction();
	BOOL IsRightToLeft();
	BOOL UseRightToLeftReading();
	BOOL UseRightToLeftScrollBar();
	void SetSubComponent(BOOL IsSubComponent);
	void AboutBox();
};

//{{AFX_INSERT_LOCATION}}
// Microsoft Visual C++ will insert additional declarations immediately before the previous line.

#endif // !defined(AFX_VIDEOGRABBERVC6_H__FA92BC54_0F81_441D_8E0C_B5FADFF5322C__INCLUDED_)
